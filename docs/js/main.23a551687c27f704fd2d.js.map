{"version":3,"file":"js/main.23a551687c27f704fd2d.js","mappings":"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","sources":["webpack:///./web/components/dropzone.vue","webpack:///./web/components/dropzone.vue?f3cc","webpack:///./web/components/app.vue","webpack:///./web/components/app.vue?dffa","webpack:///./web/components/image-collection.vue","webpack:///./web/components/image-collection.vue?0564","webpack:///./web/js/index.js","webpack:///../image-lint/lib/api.js","webpack:///../image-lint/lib/args-helper.js","webpack:///../image-lint/lib/defaults.js","webpack:///../image-lint/lib/finder.js","webpack:///../image-lint/lib/finder/buffer.js","webpack:///../image-lint/lib/hasher.js","webpack:///../image-lint/lib/ident.js","webpack:///../image-lint/lib/ident/avif-ident.js","webpack:///../image-lint/lib/ident/bmp-ident.js","webpack:///../image-lint/lib/ident/gif-ident.js","webpack:///../image-lint/lib/ident/html-ident.js","webpack:///../image-lint/lib/ident/ico-ident.js","webpack:///../image-lint/lib/ident/jpg-ident.js","webpack:///../image-lint/lib/ident/jxl-ident.js","webpack:///../image-lint/lib/ident/magic-number-ident.js","webpack:///../image-lint/lib/ident/png-ident.js","webpack:///../image-lint/lib/ident/psd-ident.js","webpack:///../image-lint/lib/ident/riff-ident.js","webpack:///../image-lint/lib/ident/svg-ident.js","webpack:///../image-lint/lib/ident/tiff-ident.js","webpack:///../image-lint/lib/ident/webp-ident.js","webpack:///../image-lint/lib/ident/xml-ident.js","webpack:///../image-lint/lib/image-info.js","webpack:///../image-lint/lib/image/avif-info.js","webpack:///../image-lint/lib/image/gif-info.js","webpack:///../image-lint/lib/image/isobmff/isobmff.js","webpack:///../image-lint/lib/image/jpg-info.js","webpack:///../image-lint/lib/image/jxl-info.js","webpack:///../image-lint/lib/image/jxl/bit-stream.js","webpack:///../image-lint/lib/image/jxl/color-encoding.js","webpack:///../image-lint/lib/image/jxl/image-metadata.js","webpack:///../image-lint/lib/image/jxl/size-header.js","webpack:///../image-lint/lib/image/png-info.js","webpack:///../image-lint/lib/linter.js","webpack:///../image-lint/lib/loader.js","webpack:///../image-lint/lib/loader/blob.js","webpack:///../image-lint/lib/logger.js","webpack:///../image-lint/lib/pixel-format.js","webpack:///../image-lint/lib/work-handler.js"],"sourcesContent":["<script>\nexport default {\n\t'props': {\n\t\t'modelValue': Array\n\t},\n\t'methods': {\n\t\t'files': function* (dt) {\n\t\t\tlet files = [];\n\n\t\t\tif (dt.items) {\n\t\t\t\tfor (let i of dt.items) {\n\t\t\t\t\tyield i.getAsFile();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tyield* dt.files;\n\t\t\t}\n\t\t},\n\t\t'drop': function (e) {\n\t\t\te.preventDefault();\n\t\t\tthis.$refs.dropzone.classList.remove('active');\n\n\t\t\tconst files = Array.from(this.files(e.dataTransfer));\n\n\t\t\tthis.$emit('update:modelValue', files);\n\t\t},\n\t\t'dragenter': function () {\n\t\t\tthis.$refs.dropzone.classList.add('active');\n\t\t},\n\t\t'dragleave': function () {\n\t\t\tthis.$refs.dropzone.classList.remove('active');\n\t\t},\n\t\t'dragover': function (e) {\n\t\t\te.preventDefault();\n\t\t}\n\t}\n};\t\n</script>\n\n<template>\n\t<div class=\"drop-target\" ref=\"dropzone\" @drop=\"drop\" @dragover=\"dragover\" @dragenter=\"dragenter\" @dragleave=\"dragleave\">\n\t\t<slot>Drop files here</slot>\n\t</div>\n</template>\n\n<style>\n@import \"../css/variables.css\";\n\n.drop-target {\n  height: 100%;\n\tdisplay: flex;\n  justify-content: center;\n}\n\n.drop-target.empty {\n\talign-items: center;\n}\n\n.drop-target.active {\n  border: 2px dashed var(--color-status-good);\n}\n</style>\n","import { render } from \"./dropzone.vue?vue&type=template&id=2f3a8d06\"\nimport script from \"./dropzone.vue?vue&type=script&lang=js\"\nexport * from \"./dropzone.vue?vue&type=script&lang=js\"\n\nimport \"./dropzone.vue?vue&type=style&index=0&id=2f3a8d06&lang=css\"\n\nimport exportComponent from \"/Users/aaronspaulding/Sites/playground/image-lint/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport {reactive} from 'vue';\nimport GithubButton from 'vue-github-button';\nimport ImageLint from 'image-lint';\n\nimport packageJson from '../../../image-lint/package.json';\n\nimport 'vue-multiselect/dist/vue-multiselect.css';\n\nexport default {\n\tcomponents: {\n\t\tGithubButton\n\t},\n\tdata() {\n\t\tconst options = Object.assign({}, ImageLint.defaults);\n\n\t\toptions.color_space = options.color_space.split(',');\n\n\t\treturn {\n\t\t\t'name': packageJson.name,\n\t\t\t'version': packageJson.version,\n\t\t\t'description': packageJson.description,\n\t\t\t'support': {},\n\t\t\t'available': {\n\t\t\t\t'color_space': ['G', 'RGB', 'CMYK', 'YCbCr', 'YCCK', 'LAB', 'HSV']\n\t\t\t},\n\t\t\t'option':  options,\n\t\t\t'files': []\n\t\t};\n\t},\n\t'methods': {\n\t\t'clear': function () {\n\t\t\tthis.files.length = 0;\n\t\t},\n\t}\n}\n</script>\n\n<template>\n\t<div>\n\t\t<header class=\"lint-header\">\n\t\t\t<h1 class=\"lint-title\">{{ name }}</h1>\n\t\t\t<span class=\"lint-version\">v{{ version }}</span>\n\t\t\t<h2 class=\"lint-subtitle\">{{ description }}</h2>\n\n\t\t\t<github-button class=\"github-button\" href=\"https://github.com/aaronasachimp/image-lint\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star aaronasachimp/image-lint on GitHub\">Star</github-button>\n\t\t</header>\n\t\t<form class=\"image-lint-app\">\n\t\t\t<div class=\"pane pane-options\">\n\t\t\t\t<h3 class=\"lint-options-title\">Options</h3>\n\n\t\t\t\t<label class=\"lint-option lint-option-check\">\n\t\t\t\t\t<input type=\"checkbox\" v-model=\"option.mismatch\" />\n\t\t\t\t\tFind mismatches between file type and file extension.\n\t\t\t\t</label>\n\n\t\t\t\t<label class=\"lint-option lint-option-check\">\n\t\t\t\t\t<input type=\"checkbox\" v-model=\"option.duplicate\" />\n\t\t\t\t\tFind files that have been copied.\n\t\t\t\t</label>\n\t\t\t\t\n\t\t\t\t<label class=\"lint-option lint-option-number\">\n\t\t\t\t\tSet the maximum bytes per pixel before giving a warning.\n\t\t\t\t\t<input type=\"number\" v-model=\"option.bytes_per_pixel\" step=\"0.1\" min=\"0\" />\n\t\t\t\t</label>\n\n\t\t\t\t<label class=\"lint-option lint-option-number\">\n\t\t\t\t\tSet the minimum byte savings before giving a warning.\n\t\t\t\t\t<input type=\"number\" v-model=\"option.byte_savings\" min=\"0\" />\n\t\t\t\t</label>\n\n\t\t\t\t<label class=\"lint-option lint-option-array\">\n\t\t\t\t\tSet the allowed color spaces.\n\n\t\t\t\t\t<vue-multiselect v-model=\"option.color_space\" :multiple=\"true\" :options=\"available.color_space\" />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"pane pane-dropzone\">\n\t\t\t\t<dropzone v-model=\"files\" :class=\"{ empty: files.length == 0 }\">\n\t\t\t\t\t<div v-if=\"files.length\">\n\t\t\t\t\t\t<button type=\"button\" v-on:click=\"clear\">Clear Results</button>\n\t\t\t\t\t\t<image-collection :options=\"option\" :files=\"files\"></image-collection>\n\t\t\t\t\t</div>\n\t\t\t\t</dropzone>\n\t\t\t</div>\n\t\t</form>\n\t</div>\n</template>\n\n<style>\n\n@import \"../css/variables.css\";\n\n.image-lint-app {\n\tdisplay: grid;\n\tgrid-template-columns: 16em 1fr;\n}\n\n.pane {\n\tpadding: 20px;\n}\n\n.pane-options {\n\tbackground: var(--color-layer-bg);\n\tmax-width: 450px;\n}\n\n.lint-header {\n\tbackground: var(--color-status-good);\n\tcolor: var(--color-status-good-contrast);\n\tpadding: 20px;\n}\n\n.lint-header {\n\tdisplay: grid;\n\tgrid-template-columns: auto 1fr auto;\n\tgrid-template-rows: auto 1fr;\n\tgrid-template-areas:\n\t\t\"title   desc button\"\n\t\t\"version desc button\";\n\talign-items: baseline;\n}\n\n.lint-title {\n\tdisplay: inline-block;\n\tfont-weight: 300;\n\tfont-size: 36px;\n\tmargin: 0;\n\tgrid-area: title;\n}\n\n.lint-subtitle {\n\tdisplay: inline-block;\n\tfont-weight: 300;\n\tfont-size: 18px;\n\tmargin: 0 0 0 15px;\n\tgrid-area: desc;\n}\n\n.lint-version {\n\tfont-size: 0.8em;\n\tgrid-area: version;\n\tjustify-self: end;\n}\n\n.github-button {\n\tgrid-area: button;\n\talign-self: center;\n}\n\n.lint-options-title {\n\tmargin-top: 0;\n}\n\n.lint-option {\n\tdisplay: block;\n\tmargin: 1.1em 0;\n\tline-height: 1.3;\n}\n\n.lint-option-check {\n\tdisplay:  grid;\n\tgrid-template-columns: 1.4em auto;\n\tgap: 0.4em;\n}\n\n.lint-option-check [type=checkbox] {\n\talign-self: start;\n\theight: 1.4em;\n}\n\n.lint-option-number,\n.lint-option-array {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.lint-option-number [type=number],\n.lint-option-array .multiselect {\n\tmargin-top: 0.4em;\n\tfont-size:  1em;\n\tpadding:  0.2em;\n}\n\n</style>","import { render } from \"./app.vue?vue&type=template&id=42bbd542\"\nimport script from \"./app.vue?vue&type=script&lang=js\"\nexport * from \"./app.vue?vue&type=script&lang=js\"\n\nimport \"./app.vue?vue&type=style&index=0&id=42bbd542&lang=css\"\n\nimport exportComponent from \"/Users/aaronspaulding/Sites/playground/image-lint/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport ImageLint from 'image-lint';\n\nconst finder = new ImageLint.BufferArrayFinder(ImageLint.ImageIdentifier.get_all_extensions(), ImageLint.ImageIdentifier.get_all_mimes());\n\nexport default {\n\t'props': ['options', 'files'],\n\tdata() {\n\t\treturn {\n\t\t\tlinter: null,\n\t\t\terror: null,\n\t\t\tresults: null\n\t\t};\n\t},\n\t'watch': {\n\t\tfiles: {\n\t\t\tasync handler(files, files_old) {\n\t\t\t\tlet options = this.options,\n\t\t\t\t\tresults = null,\n\t\t\t\t\tlinter = new ImageLint.Linter(finder);\n\n\t\t\t\ttry {\n\t\t\t\t\tresults = await (new Promise((resolve, reject) => {\n\t\t\t\t\t\tlet result_list = [];\n\n\t\t\t\t\t\tlinter.lint(files, options)\n\t\t\t\t\t\t\t.on('file.completed', (logger) => {\n\t\t\t\t\t\t\t\tresult_list.push(logger);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.on('linter.completed', () => {\n\t\t\t\t\t\t\t\tresolve(result_list);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.error = e;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.results = results;\n\t\t\t},\n\t\t\timmediate: true\n\t\t}\n\t},\n\t'computed': {\n\t\thas_finished() {\n\t\t\treturn this.results !== null || this.error !== null;\n\t\t},\n\t\thas_error() {\n\t\t\treturn this.error !== null;\n\t\t},\n\t\thas_results() {\n\t\t\treturn this.results !== null;\n\t\t}\n\t},\n\t'methods': {\n\t\treformat_log(log) {\n\t\t\tlet log_parts = log.trim().split('\\n');\n\n\t\t\treturn log_parts.map((line) => {\n\t\t\t\treturn line.trim();\n\t\t\t}).join('\\n');\n\t\t}\n\t}\n};\n</script>\n\n<template>\n\t<ul class=\"lint-results\">\n\t\t<li v-for=\"result in results\" class=\"lint-result\" v-bind:class=\"{ 'has-error': has_error, 'has-results': has_results }\">\n\t\t\t<details open>\n\t\t\t\t<summary class=\"lint-result-summary\" v-bind:class=\"{ 'lint-error': result && result.count.error, 'lint-warn': result && result.count.warn }\">\n\t\t\t\t\t{{ result.filename }}\n\t\t\t\t\t<span v-if=\"has_results\"> - \n\t\t\t\t\t\t<span v-if=\"result.count.info\">Info: {{ result.count.info }}<span v-if=\"result.count.warn || result.count.error\">, </span></span>\n\t\t\t\t\t\t<span v-if=\"result.count.warn\">Warnings: {{ result.count.warn }}<span v-if=\"result.count.error\">, </span></span>\n\t\t\t\t\t\t<span v-if=\"result.count.error\">Errors: {{ result.count.error }}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</summary>\n\t\t\t\t<output class=\"lint-result-output\" v-if=\"has_results\" v-html=\"reformat_log(result.log)\"></output>\n\t\t\t</details>\n\t\t</li>\n\t</ul>\n</template>\n\n<style>\n@import \"../css/variables.css\";\n\n.lint-results {\n\tlist-style: none;\n\tpadding: 0;\n}\n\n.lint-result {\n\tmargin: 15px 0px;\n\tbackground: var(--color-layer-bg);\n\tpadding-bottom: 1px; /* Prevent margin-collapse */\n\tborder-radius: 8px;\n\toverflow: hidden;\n}\n\n.lint-result .lint-result-summary {\n\tbackground: var(--color-status-unknown);\n\tpadding: 10px 10px 10px 18px;\n}\n\n.lint-result.has-results .lint-result-summary {\n\tbackground: var(--color-status-good);\n\tpadding: 10px 10px 10px 18px;\n}\n\n.lint-result .lint-result-summary.lint-warn {\n\tbackground: var(--color-status-warn);\n}\n\n.lint-result .lint-result-summary.lint-error {\n\tbackground: var(--color-status-failure);\n}\n\n.lint-result.has-error .lint-result-summary {\n\tbackground: var(--color-status-error);\n}\n\n.lint-result.has-error .upload-progress,\n.lint-result.has-results .upload-progress {\n\tdisplay: none;\n}\n\n.lint-result-output {\n\tfont-family: monospace;\n\twhite-space: pre-wrap;\n\tmargin: 10px 10px 10px 18px;\n\tdisplay: block;\n}\n</style>","import { render } from \"./image-collection.vue?vue&type=template&id=bb517606\"\nimport script from \"./image-collection.vue?vue&type=script&lang=js\"\nexport * from \"./image-collection.vue?vue&type=script&lang=js\"\n\nimport \"./image-collection.vue?vue&type=style&index=0&id=bb517606&lang=css\"\n\nimport exportComponent from \"/Users/aaronspaulding/Sites/playground/image-lint/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createApp} from 'vue';\nimport Multiselect from 'vue-multiselect';\n\nimport Dropzone from '../components/dropzone.vue';\nimport ImageLintApp from '../components/app.vue';\nimport ImageCollection from '../components/image-collection.vue';\n\nimport \"../css/index.css\";\n\n\nconst body = document.body;\nconst rootEl = document.createElement('div');\n\nbody.appendChild(rootEl);\n\ncreateApp(ImageLintApp)\n\t.component('vue-multiselect', Multiselect)\n\t.component('dropzone', Dropzone)\n\t.component('image-lint-app', ImageLintApp)\n\t.component('image-collection', ImageCollection)\n\t.mount(rootEl);\n","/* @flow */\n\nconst linter = require('./linter');\nconst defaults = require('./defaults');\nconst argshelper = require('./args-helper');\nconst InfoProvider = require('./image-info');\nconst ImageIdentifier = require('./ident');\nconst BufferArrayFinder = require('./finder/buffer');\n\nexports.Linter = linter.default;\nexports.defaults = defaults.default;\nexports.ArgsHelper = argshelper.default;\nexports.InfoProvider = InfoProvider;\nexports.ImageIdentifier = ImageIdentifier;\nexports.BufferArrayFinder = BufferArrayFinder;\n","/* @flow */\n\n/*::\nimport type {minimistOptions, minimistOutput} from 'minimist';\n\nexport type ExtendedOptions = {\n\t...minimistOptions,\n\t'-help-usage': string,\n\t'-help-options': {\n\t\t[name: string]: string\n\t},\n}\n*/\n\n/**\n * A helper class for command line arguments.\n */\nclass ArgsHelper {\n\t/**\n\t * Process the arguments to handle the standard arguments like help\n\t * and version.\n\t *\n\t * @param  { ExtendedOptions } config The minimist config\n\t * @param  { object } args            The parsed arguments from minimist.\n\t * @return { boolean }                Returns true if the process should exit.\n\t */\n\tstatic argv(config/*: ExtendedOptions */, args/*: minimistOutput */)/*: boolean */ {\n\t\tif (args.help) {\n\t\t\treturn this.help(config);\n\t\t}\n\n\t\tif (args.version) {\n\t\t\treturn this.version(config);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Load the package info JSON file.\n\t *\n\t * @return {any} The package JSON.\n\t */\n\tstatic load_package_info()/*: any */ {\n\t\treturn require('../package.json');\n\t}\n\n\t/**\n\t * Print an option for display purposes.\n\t *\n\t * @param  {ExtendedOptions} config  The argument configuration.\n\t * @param  {string} name             The name of the option.\n\t * @param  {string} description      A description of the option.\n\t */\n\tstatic print_option(config/*: ExtendedOptions */, name/*: string */, description/*: string */) {\n\t\tlet aliases = [name];\n\t\tlet options = '';\n\t\tlet default_value = '';\n\n\t\tif (config.alias && name in config.alias) {\n\t\t\tconst alias = config.alias[name];\n\n\t\t\tif (!Array.isArray(alias)) {\n\t\t\t\taliases.push(alias);\n\t\t\t} else {\n\t\t\t\taliases = aliases.concat(alias);\n\t\t\t}\n\t\t}\n\n\t\toptions = aliases.map((alias) => {\n\t\t\tlet option = '';\n\n\t\t\t// if the alias has zero length skip it.\n\t\t\tif (alias.length > 1) {\n\t\t\t\toption += '--' + alias;\n\t\t\t} else if (alias.length == 1) {\n\t\t\t\toption += '-' + alias;\n\t\t\t}\n\n\t\t\treturn option;\n\t\t}).join(', ');\n\n\t\tif (config.default && name in config.default) {\n\t\t\tdefault_value = ' Default: ' + config.default[name].toString();\n\t\t}\n\n\t\tconsole.log('  ' + options + '\\t' + description + default_value);\n\t}\n\n\t/**\n\t * Add the help option to the configuration.\n\t *\n\t * @param  {any} config The argument configuration.\n\t * @return {boolean}    True if the process should exit.\n\t */\n\tstatic help(config/*: ExtendedOptions */)/*: boolean */ {\n\t\tconst info = this.load_package_info();\n\n\t\tconsole.log(`${ info.name } - ${ info.description }`);\n\t\tconsole.log(`\\nUsage: ${ config['-help-usage'] }`);\n\t\tconsole.log('\\nOptions: ');\n\n\t\tif ('-help-options' in config) {\n\t\t\tfor (const option in config['-help-options']) {\n\t\t\t\tif (config['-help-options'].hasOwnProperty(option)) {\n\t\t\t\t\tconst description = config['-help-options'][option];\n\n\t\t\t\t\tthis.print_option(config, option, description);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Add the version option to the configuration.\n\t *\n\t * @param  {minimistOptions} config The argument configuration.\n\t * @return {boolean}                True if the process should exit.\n\t */\n\tstatic version(config/*: minimistOptions */)/*: boolean */ {\n\t\tconst info = this.load_package_info();\n\n\t\tconsole.log(info.name + ' v' + info.version);\n\n\t\treturn true;\n\t}\n}\n\n\nmodule.exports = {\n\t'default': ArgsHelper,\n};\n","const MINIMUM_BYTES_PER_PIXEL = 3;\nconst MINIMUM_BYTE_SAVINGS = 500;\nconst DEFAULT_COLOR_SPACES = 'G,RGB';\n\nmodule.exports = {\n\tdefault: {\n\t\t'bytes_per_pixel': MINIMUM_BYTES_PER_PIXEL,\n\t\t'byte_savings': MINIMUM_BYTE_SAVINGS,\n\t\t'color_space': DEFAULT_COLOR_SPACES,\n\t\t'mismatch': true,\n\t\t'duplicate': true,\n\t},\n};\n","'use strict';\n/* @flow */\n\nconst EventEmitter = require('events');\n\n/*::\nimport type Loader from './loader';\n\nexport interface FileDescriptor {\n\tpath: string;\n\textension: string;\n\tloader: Loader;\n}\n */\n\n/**\n * A base class for finding files in different mediums.\n */\nclass Finder {\n\t/*::\n\textensions: string[];\n\tmimes: string[];\n\t */\n\n\t/**\n\t * Construct a new Finder\n\t * @param  {string[]} extensions The list of extensions to look for.\n\t * @param  {string[]} mimes      The list of MIME types to look for.\n\t */\n\tconstructor(extensions/*: string[] */, mimes/*: string[]*/) {\n\t\tthis.extensions = extensions;\n\t\tthis.mimes = mimes;\n\t}\n\n\t/**\n\t * Get an iterator of unresolved file descriptors.\n\t *\n\t * @param {string[]} initial_items The initial set of items to be searched for.\n\t */\n\tget_files(initial_items/*: string[] */)/*: Promise<Iterable<FileDescriptor>> */ {\n\t\tthrow new Error('Not Implemented');\n\t}\n\n\t/**\n\t * Determine if the provided extension is an image extension (provided in\n\t * the constructor).\n\t *\n\t * @param {string}  ext The extension to check.\n\t * @return {boolean}    True if it is an image extension, false otherwise.\n\t */\n\tis_image_extension(ext/*: string */)/*: boolean */ {\n\t\treturn this.extensions.indexOf(ext) >= 0;\n\t}\n\n\t/**\n\t * Determine if the provided MIME type is an image MIME type (provided in\n\t * the constructor).\n\t *\n\t * @param {string}  mime The MIME type to check.\n\t * @return {boolean}     True if it is an image MIME type, false otherwise.\n\t */\n\tis_image_mime(mime/*: string */)/*: boolean */ {\n\t\treturn this.mimes.indexOf(mime) >= 0;\n\t}\n}\n\nmodule.exports = Finder;\n","/* @flow */\n\nconst Finder = require('../finder'),\n\t  BlobLoader = require('../loader/blob'),\n\t  path = require('path');\n\n/*::\nimport type { FileDescriptor } from '../finder';\n */\n\n/**\n * Finds files in a Browser Blob object.\n */\nclass BufferArrayFinder extends Finder {\n\t/*::\n\tfilename: string;\n\tpath: string;\n\tbuffer: Buffer;\n\t*/\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget_files(initial_files/*: string[] */)/*: Promise<Iterable<FileDescriptor>> */ {\n\t\treturn Promise.resolve(this._search.bind(this, initial_files));\n\t}\n\n\t/**\n\t * Traverse the file system yielding any files it finds.\n\t *\n\t * @param {Blob[]} files  The initial queue items.\n\t */\n\t* _search(files/*: Blob[] */)/*: Generator<FileDescriptor, *, *> */ {\n\t\tfor (const file of files) {\n\t\t\tconst extension = path.extname(file.name);\n\n\t\t\tyield {\n\t\t\t\t'path': file.name,\n\t\t\t\t'extension': extension,\n\t\t\t\t'loader': new BlobLoader(file),\n\t\t\t};\n\t\t}\n\t}\n}\n\nmodule.exports = BufferArrayFinder;\n","/* @flow */\n'use strict';\n\nconst TRIE_DEPTH = 3;\nconst HASH_TYPE = 'sha1';\nconst crypto = require('crypto');\n\n/*::\nconst Finder = require('./finder');\n\nimport type { FileDescriptor } from './finder';\n\ntype Trie = Map<string, Map<string, Map<string, Trie>>>;\n*/\n\n/**\n * Find duplicate files.\n */\nclass Hasher {\n\t/*::\n\ttrie: Trie;\n\t*/\n\n\t/**\n\t * Construct a new Hasher.\n\t */\n\tconstructor() {\n\t\tthis.trie = new Map();\n\t}\n\n\t/**\n\t * Retrive the branch of the Trie that would contain the given digest.\n\t * @param  {string} digest A unique hash.\n\t * @return {Trie}          The sub Trie.w\n\t */\n\tfind(digest/*: string */)/*: Trie */ {\n\t\tlet current = this.trie;\n\t\tlet depth = 0;\n\n\t\t// Descend down the trie to find the leaf that contains this digest.\n\t\twhile (depth <= TRIE_DEPTH) {\n\t\t\tconst previous = current;\n\t\t\tconst byte = digest[depth];\n\n\t\t\tcurrent = current.get(byte);\n\n\t\t\tif (!current) {\n\t\t\t\tcurrent = new Map();\n\t\t\t\tprevious.set(byte, current);\n\t\t\t}\n\n\t\t\tdepth++;\n\t\t}\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * Determine if the given buffer has already been seen. If not the hash and\n\t * path will be added to the Trie.\n\t * @param  {string} path    The path to the file.\n\t * @param  {Buffer} buffer  The file's content\n\t * @return {boolean}        The path of the existing file with the\n\t *                          same contents.\n\t */\n\tcontains(path/*: string */, buffer/*: Buffer */)/*: ?string */ {\n\t\t// The leaf should contain a map of digests to file names.\n\t\tconst hash = crypto.createHash(HASH_TYPE);\n\n\t\thash.update(buffer);\n\n\t\tconst digest = hash.digest('binary');\n\t\tconst hashes = this.find(digest);\n\t\tconst found_name = hashes.get(digest);\n\n\t\tif (!found_name) {\n\t\t\thashes.set(digest, path);\n\t\t}\n\n\t\treturn found_name;\n\t}\n}\n\nmodule.exports = Hasher;\n","/* @flow */\n\n/*::\nimport InfoProvider from \"./image-info.js\";\n*/\n\n/**\n * Abstract class to identify the type of images.\n */\nclass ImageIdentifier {\n\t/*::\n\t_info_provider: InfoProvider | null\n\n\tstatic _extension_registry: Map<string, ImageIdentifier>;\n\tstatic _mime_registry: Map<string, ImageIdentifier>;\n\tstatic _image_extensions: string[];\n\tstatic _all_extensions: string[];\n\tstatic _all_mimes: string[];\n\tstatic _all_providers: ImageIdentifier[];\n\t*/\n\n\t/**\n\t * Construct an InfoProvider\n\t */\n\tconstructor() {\n\t\tthis._info_provider = null;\n\t}\n\n\t/**\n\t * Determine if this file type is identify-only or if there is an associated\n\t * information provider.\n\t *\n\t * @return {boolean} True if the file type is identify-only.\n\t */\n\tidentify_only()/*: boolean */ {\n\t\treturn !this.get_info_provider();\n\t}\n\n\t/**\n\t * Determine if the file is of the file type.\n\t *\n\t * @param  {Buffer}  buffer The image buffer.\n\t */\n\tis_of_file_type(buffer/*: Buffer */)/*: boolean */ {\n\t\tthrow new Error('Not Implemented');\n\t}\n\n\t/**\n\t * Get the most common extension for this type of file.\n\t *\n\t * @return {String} containing the extension '.jpg', '.png', etc.\n\t */\n\tget_extension()/*: string */ {\n\t\treturn this.get_extensions()[0];\n\t}\n\n\t/**\n\t * Get the possible file extensions for this type of file having the\n\t * canonical extension as the first element.\n\t */\n\tget_extensions()/*: string[] */ {\n\t\tthrow new Error('Not Implemented');\n\t}\n\n\t/**\n\t * Get the most common mime for this type of file.\n\t *\n\t * @return {String} containing the mime type 'image/jpeg', 'image/png', etc.\n\t */\n\tget_mime()/*: string */ {\n\t\treturn this.get_mimes()[0];\n\t}\n\n\t/**\n\t * Get the possible MIME types for this type of file having the canonical\n\t * MIME type as the first element.\n\t */\n\tget_mimes()/*: string[] */ {\n\t\tthrow new Error('Not Implemented');\n\t}\n\n\t/**\n\t * Determine if the buffer contains enough information to be validated.\n\t *\n\t * @param  {Buffer} buffer The image buffer.\n\t * @return {boolean} True if the image can be validated.\n\t */\n\tcan_validate(buffer/*: Buffer */)/*: boolean */ {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get an instance of the info provider for this file type.\n\t *\n\t * @return {InfoProvider} The info provider.\n\t */\n\tget_info_provider()/*: Class<InfoProvider> | null */ {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Add an image identifier to the registry.\n\t * @param  {function} Constructor The constructor of the identifier.\n\t */\n\tstatic register(Constructor/*: Class<ImageIdentifier> */) {\n\t\tconst provider = new Constructor();\n\t\tconst is_identify_only = provider.identify_only();\n\n\t\tfor (const extension of provider.get_extensions()) {\n\t\t\tthis._extension_registry.set(extension, provider);\n\n\t\t\tif (!is_identify_only) {\n\t\t\t\tthis._all_extensions.push(extension);\n\t\t\t}\n\t\t}\n\n\t\tfor (const mime of provider.get_mimes()) {\n\t\t\tthis._mime_registry.set(mime, provider);\n\n\t\t\tif (!is_identify_only) {\n\t\t\t\tthis._all_mimes.push(mime);\n\t\t\t}\n\t\t}\n\n\t\tthis._all_providers.push(provider);\n\t}\n\n\t/**\n\t * Clear the registered identifiers.\n\t */\n\tstatic clear_registry() {\n\t\tthis._extension_registry.clear();\n\t\tthis._all_extensions.length = 0;\n\n\t\tthis._mime_registry.clear();\n\t\tthis._all_mimes.length = 0;\n\n\t\tthis._all_providers.length = 0;\n\t}\n\n\t/**\n\t * Get all of the know file extensions.\n\t *\n\t * @return {string[]} An array of file extension.\n\t */\n\tstatic get_all_extensions()/*: string[] */ {\n\t\treturn ImageIdentifier._all_extensions;\n\t}\n\n\t/**\n\t * Get all of the known MIME types.\n\t *\n\t * @return {string[]} An array of MIME types.\n\t */\n\tstatic get_all_mimes()/*: string[] */ {\n\t\treturn ImageIdentifier._all_mimes;\n\t}\n\n\t/**\n\t * Construct a new identifier using the file extension.\n\t *\n\t * @param {string} extension   The file extension of the.\n\t * @return {ImageIdentifier}  The new image identifier.\n\t */\n\tstatic from_extension(extension/*: string */)/*: ?ImageIdentifier */ {\n\t\treturn ImageIdentifier._extension_registry.get(extension);\n\t}\n\n\t/**\n\t * Iterate all of the registered providers.\n\t */\n\tstatic* all_providers()/*: Generator<ImageIdentifier, void, void>*/ {\n\t\tyield* ImageIdentifier._all_providers;\n\t}\n}\n\nImageIdentifier._extension_registry = new Map();\nImageIdentifier._mime_registry = new Map();\nImageIdentifier._all_providers = [];\nImageIdentifier._all_extensions = [];\nImageIdentifier._all_mimes = [];\n\nmodule.exports = ImageIdentifier;\n","/* @flow */\n\nconst ImageIdentifier = require('../ident.js');\nconst AVIFInfoProvider = require('../image/avif-info.js');\n\nconst FTYP_START = 4;\nconst FTYPE_LENGTH = 8;\n\n/**\n * An image identifier that identifies ICO images.\n */\nclass AVIFIdentifier extends ImageIdentifier {\n\t/**\n\t * @inheritDoc\n\t */\n\tcan_validate(buffer) {\n\t\treturn buffer.length > (FTYP_START + FTYPE_LENGTH);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tis_of_file_type(buffer) {\n\t\tconst ftyp = buffer.subarray(FTYP_START, FTYP_START + FTYPE_LENGTH).toString('ascii');\n\n\t\treturn ftyp === 'ftypavif' || ftyp === 'ftypheic';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_extensions() {\n\t\treturn [\n\t\t\t'.avif',\n\t\t\t'.heif',\n\t\t\t'.heic',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_mimes() {\n\t\treturn [\n\t\t\t'image/avif',\n\t\t\t'image/heif',\n\t\t\t'image/heic',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_info_provider() {\n\t\treturn AVIFInfoProvider;\n\t}\n}\n\nImageIdentifier.register(AVIFIdentifier);\n","/* @flow */\n\nconst ImageIdentifier = require('../ident.js');\nconst MagicNumberIdentifier = require('./magic-number-ident.js');\n\n/**\n * An image identifier that identifies BMP images.\n *\n * https://en.wikipedia.org/wiki/BMP_file_format\n */\nclass BMPIdentifier extends MagicNumberIdentifier {\n\t/**\n\t * @inheritDoc\n\t */\n\tget_magic() {\n\t\treturn Buffer.from('424D', 'hex');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_extensions() {\n\t\treturn [\n\t\t\t'.bmp',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_mimes() {\n\t\treturn [\n\t\t\t'image/bmp',\n\t\t\t'image/x-bmp',\n\t\t];\n\t}\n}\n\nImageIdentifier.register(BMPIdentifier);\n","/* @flow */\n\nconst ImageIdentifier = require('../ident.js');\nconst MagicNumberIdentifier = require('./magic-number-ident.js');\nconst GIFInfoProvider = require('../image/gif-info.js');\n\n/**\n * An image identifier that identifies GIF images.\n */\nclass GIFIdentifier extends MagicNumberIdentifier {\n\t/**\n\t * @inheritDoc\n\t */\n\tget_magic() {\n\t\treturn Buffer.from('GIF');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_extensions() {\n\t\treturn [\n\t\t\t'.gif',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_mimes() {\n\t\treturn [\n\t\t\t'image/gif',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_info_provider() {\n\t\treturn GIFInfoProvider;\n\t}\n}\n\nImageIdentifier.register(GIFIdentifier);\n","/* @flow */\n\nconst ImageIdentifier = require('../ident.js');\nconst XMLIdentifier = require('./xml-ident.js');\n\n/**\n * An image identifier that identifies HTML files.\n */\nclass HTMLIdentifier extends XMLIdentifier {\n\t/**\n\t * @inheritDoc\n\t */\n\tget_root_element() {\n\t\treturn 'html';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_extensions() {\n\t\treturn [\n\t\t\t'.html',\n\t\t\t'.htm',\n\t\t\t'.xhtml',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_mimes() {\n\t\treturn [\n\t\t\t'text/html',\n\t\t\t'application/xhtml+xml',\n\t\t];\n\t}\n}\n\nImageIdentifier.register(HTMLIdentifier);\n","/* @flow */\n\nconst ImageIdentifier = require('../ident.js');\nconst FIRST_BYTE = 0;\nconst ICO_MAGIC = 1;\nconst CUR_MAGIC = 2;\nconst MINIMUM_SIZE = 4; // 4 == size of FIRST_BYTE + size of *_MAGIC\n\n/**\n * An image identifier that identifies ICO images.\n */\nclass IcoIdentifier extends ImageIdentifier {\n\t/**\n\t * @inheritDoc\n\t */\n\tcan_validate(buffer) {\n\t\treturn buffer.length > MINIMUM_SIZE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tis_of_file_type(buffer) {\n\t\t// ico: 0000 0001\n\t\t// cur: 0000 0002\n\t\tconst first_magic = buffer.readUInt16LE(0);\n\t\tconst type_magic = buffer.readUInt16LE(2);\n\n\t\treturn first_magic === FIRST_BYTE &&\n\t\t\t(type_magic === ICO_MAGIC || type_magic === CUR_MAGIC);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_extensions() {\n\t\treturn [\n\t\t\t'.ico',\n\t\t\t'.cur',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_mimes() {\n\t\treturn [\n\t\t\t'image/x-icon',\n\t\t];\n\t}\n}\n\nImageIdentifier.register(IcoIdentifier);\n","/* @flow */\n\nconst ImageIdentifier = require('../ident.js');\nconst MagicNumberIdentifier = require('./magic-number-ident.js');\nconst JPGInfoProvider = require('../image/jpg-info.js');\n\n/**\n * An image identifier that identifies JPEG images.\n */\nclass JPGIdentifier extends MagicNumberIdentifier {\n\t/**\n\t * @inheritDoc\n\t */\n\tget_magic() {\n\t\treturn Buffer.from('ffd8ff', 'hex');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_extensions() {\n\t\treturn [\n\t\t\t'.jpg',\n\t\t\t'.jpeg',\n\t\t\t'.jpe',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_mimes() {\n\t\treturn [\n\t\t\t'image/jpeg',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_info_provider() {\n\t\treturn JPGInfoProvider;\n\t}\n}\n\nImageIdentifier.register(JPGIdentifier);\n","/* @flow */\n\nconst ImageIdentifier = require('../ident.js');\nconst MagicNumberIdentifier = require('./magic-number-ident.js');\nconst JXLInfoProvider = require('../image/jxl-info.js');\n\n/**\n * An image identifier that identifies GIF images.\n */\nclass JXLIdentifier extends MagicNumberIdentifier {\n\t/**\n\t * @inheritDoc\n\t */\n\tget_magic() {\n\t\treturn Buffer.from('ff0a', 'hex');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_extensions() {\n\t\treturn [\n\t\t\t'.jxl',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_mimes() {\n\t\treturn [\n\t\t\t'image/jxl',\n\t\t];\n\t}\n\t/**\n\t * @inheritDoc\n\t */\n\tget_info_provider() {\n\t\treturn JXLInfoProvider;\n\t}\n}\n\nImageIdentifier.register(JXLIdentifier);\n","/* @flow */\n\nconst ImageIdentifier = require('../ident.js');\n\n/**\n * An image identifier that uses a magic number to identify the format.\n */\nclass MagicNumberIdentifier extends ImageIdentifier {\n\t/**\n\t * Get the magic number for this file type\n\t */\n\tget_magic()/*: Buffer */ {\n\t\tthrow new Error('Not Implemented');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tis_of_file_type(buffer/*: Buffer */)/*: boolean */ {\n\t\tconst magic = this.get_magic();\n\t\tconst buffer_magic = buffer.slice(0, magic.length);\n\n\t\t// console.log('Validating magic: ' + this.magic.toString('hex') + ' === ' + buffer_magic.toString('hex'));\n\n\t\treturn Buffer.compare(magic, buffer_magic) === 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tcan_validate(buffer/*: Buffer */)/*: boolean */ {\n\t\tconst magic = this.get_magic();\n\n\t\treturn buffer.length >= magic.length;\n\t}\n}\n\nmodule.exports = MagicNumberIdentifier;\n","/* @flow */\n\nconst ImageIdentifier = require('../ident.js');\nconst MagicNumberIdentifier = require('./magic-number-ident.js');\nconst PNGInfoProvider = require('../image/png-info.js');\n\n/**\n * An image identifier that identifies PNG images.\n */\nclass PNGIdentifier extends MagicNumberIdentifier {\n\t/**\n\t * @inheritDoc\n\t */\n\tget_magic() {\n\t\treturn Buffer.from('89504e470d0a1a0a', 'hex');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_extensions() {\n\t\treturn [\n\t\t\t'.png',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_mimes() {\n\t\treturn [\n\t\t\t'image/png',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_info_provider() {\n\t\treturn PNGInfoProvider;\n\t}\n}\n\nImageIdentifier.register(PNGIdentifier);\n","/* @flow */\n\nconst ImageIdentifier = require('../ident.js');\nconst MagicNumberIdentifier = require('./magic-number-ident.js');\n\n/**\n * An image identifier that identifies PSD images.\n */\nclass PSDIdentifier extends MagicNumberIdentifier {\n\t/**\n\t * @inheritDoc\n\t */\n\tget_magic() {\n\t\treturn Buffer.from('38425053', 'hex');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_extensions() {\n\t\treturn [\n\t\t\t'.psd',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_mimes() {\n\t\treturn [\n\t\t\t'image/photoshop',\n\t\t\t'image/x-photoshop',\n\t\t\t'image/psd',\n\t\t];\n\t}\n}\n\nImageIdentifier.register(PSDIdentifier);\n","/* @flow */\n'use strict';\n\nconst ImageIdentifier = require('../ident.js');\nconst RIFF_TAG = 0x52494646;\nconst MINIMUM_SIZE = 12; // 12 == size of RIFF_TAG + skipped bytes + size of this.type_tag\n\n/**\n * An image identifier that identifies RIFF based files.\n */\nclass RIFFInfoProvider extends ImageIdentifier {\n\t/**\n\t * Get the type tag of this type of file.\n\t */\n\tget_type_tag()/*: number */ {\n\t\tthrow new Error('Not Implemented!');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tcan_validate(buffer/*: Buffer */)/*: boolean */ {\n\t\treturn buffer.length > MINIMUM_SIZE;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tis_of_file_type(buffer/*: Buffer */)/*: boolean */ {\n\t\tconst riff_magic = buffer.readUInt32BE(0);\n\t\tconst type_magic = buffer.readUInt32BE(8);\n\n\t\treturn riff_magic === RIFF_TAG && type_magic === this.get_type_tag();\n\t}\n}\n\nmodule.exports = RIFFInfoProvider;\n","/* @flow */\n\nconst ImageIdentifier = require('../ident.js');\nconst XMLIdentifier = require('./xml-ident.js');\n\n/**\n * An image identifier that identifies SVG images.\n */\nclass SVGIdentifier extends XMLIdentifier {\n\t/**\n\t * @inheritDoc\n\t */\n\tget_root_element() {\n\t\treturn 'svg';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_extensions() {\n\t\treturn [\n\t\t\t'.svg',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_mimes() {\n\t\treturn [\n\t\t\t'image/svg+xml',\n\t\t];\n\t}\n}\n\nImageIdentifier.register(SVGIdentifier);\n","/* @flow */\n\nconst ImageIdentifier = require('../ident.js');\nconst MagicNumberIdentifier = require('./magic-number-ident.js');\nconst TIFF_TAG = 0x49492A00;\n\n/**\n * An image identifier that identifies TIFF images.\n */\nclass TIFFIdentifier extends MagicNumberIdentifier {\n\t/**\n\t * @inheritDoc\n\t */\n\tget_magic() {\n\t\treturn Buffer.from([0x49, 0x49, 0x2A, 0x00]);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_extensions() {\n\t\treturn [\n\t\t\t'.tif',\n\t\t\t'.tiff',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_mimes() {\n\t\treturn [\n\t\t\t'image/tiff',\n\t\t\t'image/tiff-fx',\n\t\t];\n\t}\n}\n\nImageIdentifier.register(TIFFIdentifier);\n","/* @flow */\n'use strict';\n\nconst ImageIdentifier = require('../ident.js');\nconst RIFFIdentifier = require('./riff-ident.js');\nconst WEBP_TYPE_TAG = 0x57454250;\n\n/**\n * An image identifier that identifies WebP images.\n */\nclass WebPIdentifier extends RIFFIdentifier {\n\t/**\n\t * @inheritDoc\n\t */\n\tget_type_tag() {\n\t\treturn WEBP_TYPE_TAG;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_extensions() {\n\t\treturn [\n\t\t\t'.webp',\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget_mimes() {\n\t\treturn [\n\t\t\t'image/webp',\n\t\t];\n\t}\n}\n\nImageIdentifier.register(WebPIdentifier);\n","/* @flow */\n\nconst ImageIdentifier = require('../ident.js');\n\n/**\n * An image identifier that can identify XML files.\n */\nclass XMLIdentifier extends ImageIdentifier {\n\t/**\n\t * Get the name of the root element of this type of XML file.\n\t */\n\tget_root_element()/*: string */ {\n\t\tthrow new Error('Not Implemented!');\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tis_of_file_type(buffer/*: Buffer */)/*: boolean */ {\n\t\t// Only check the first part of the file.\n\t\tconst small_buffer = buffer.slice(0, 512).toString().toLowerCase();\n\n\t\treturn small_buffer.includes('<' + this.get_root_element());\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tcan_validate(buffer/*: Buffer */)/*: boolean */ {\n\t\treturn true;\n\t}\n}\n\nmodule.exports = XMLIdentifier;\n","/* @flow */\n'use strict';\n\n/*::\nimport type { Log } from './logger.js';\nimport type { FileDescriptor } from './finder.js';\nimport type { LinterOptions } from './linter.js';\nimport type { PixelFormat } from './pixel-format.js';\n\nexport\ninterface Dimensions {\n\twidth: number;\n\theight: number;\n\tframes: number;\n}\n\nexport interface ImageInfo {\n\ttruncated: boolean;\n\tdimensions?: Dimensions;\n\tsize?: number;\n\tpixel_format?: PixelFormat;\n\tbytes_per_pixel?: number;\n}\n*/\n\n/**\n * Gather information about an image file.\n */\nclass InfoProvider {\n\t/**\n\t * Calculate the number of bytes per pixel in the image.\n\t *\n\t * @param  {Dimensions} dims The dimensions of the image.\n\t * @param  {number} size     The file size of the image.\n\t * @return {number}          The number of bytes per pixel.\n\t */\n\tcalculate_bpp(dims/*: Dimensions */, size/*: number */)/*: number */ {\n\t\treturn (size - this.get_overhead()) / (dims.width * dims.height * dims.frames);\n\t}\n\n\t/**\n\t * Get the number of bytes of overhead of this file format.\n\t *\n\t * @return {number} The number in bytes.\n\t */\n\tget_overhead()/*: number */ {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Get the dimensions of the image.\n\t *\n\t * @param  {Buffer} buffer The file buffer.\n\t */\n\tget_dimensions(buffer/*: Buffer */)/*: Dimensions */ {\n\t\tthrow new Error('Not Implemented');\n\t}\n\n\t/**\n\t * Get the pixel format of the image.\n\t * @param  {Buffer} buffer The file buffer.\n\t */\n\tget_pixel_format(buffer/*: Buffer */)/*: PixelFormat */ {\n\t\tthrow new Error('Not Implemented');\n\t}\n\n\t/**\n\t * The the information for this file.\n\t * @param  {Buffer} buffer The file buffer.\n\t * @return {ImageInfo}     This image information.\n\t */\n\tget_info(buffer/*: Buffer */)/*: ImageInfo */ {\n\t\tconst info/*: ImageInfo */ = {\n\t\t\t'truncated': this.is_truncated(buffer),\n\t\t};\n\n\t\tif (!info.truncated) {\n\t\t\tconst dims = this.get_dimensions(buffer);\n\n\t\t\tinfo.dimensions = dims;\n\t\t\tinfo.size = buffer.length;\n\t\t\tinfo.pixel_format = this.get_pixel_format(buffer);\n\t\t\tinfo.bytes_per_pixel = this.calculate_bpp(dims, buffer.length);\n\t\t}\n\n\t\treturn info;\n\t}\n\n\t/**\n\t * Is the file truncated.\n\t *\n\t * @param  {Buffer}    buffer A buffer containing a compressed image.\n\t * @return {Boolean}   True if the file is invalid due to it being truncated.\n\t */\n\tis_truncated(buffer/*: Buffer */)/*: boolean */ {\n\t\tthrow new Error('Not Implemented');\n\t}\n}\n\nmodule.exports = InfoProvider;\n","/* @flow */\n'use strict';\n\n/*::\nimport type {Dimensions} from '../image-info.js';\n*/\n\nconst InfoProvider = require('../image-info.js');\nconst pf = require('../pixel-format');\nconst {RootBlock} = require('../image/isobmff/isobmff.js');\n\nconst PixelFormat = pf.PixelFormat;\nconst ColorSpace = pf.ColorSpace;\n\n/**\n * A AVIF info provider.\n */\nclass AVIFInfoProvider extends InfoProvider {\n\t/**\n\t * @inheritdoc\n\t */\n\tget_overhead()/*: number */ {\n\t\t// This is the size of the smallest possible AVIF, I'm assuming it will\n\t\t// be mostly overhead.\n\t\treturn 333;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tis_truncated(buffer/*: Buffer */)/*: boolean */ {\n\t\t// TODO: implement\n\t\treturn false;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget_dimensions(buffer/*: Buffer */)/*: Dimensions */ {\n\t\tconst root = new RootBlock(buffer);\n\t\tconst ispeAtom = root.children.meta.children.iprp.children.ipco.children.ispe;\n\n\t\treturn {\n\t\t\twidth: ispeAtom.width,\n\t\t\theight: ispeAtom.height,\n\t\t\tframes: 1,\n\t\t};\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget_pixel_format(buffer/*: Buffer */)/*: PixelFormat */ {\n\t\tconst root = new RootBlock(buffer);\n\t\tconst format = new PixelFormat();\n\t\tformat.color_space = ColorSpace.RGB;\n\t\tconst pixi = root.children.meta.children.iprp.children.ipco.children.pixi;\n\n\t\t// console.log(root.children.meta.children.iprp.children.ipco.children);\n\n\t\tif (pixi) {\n\t\t\tconst channels = pixi.channels;\n\n\t\t\tif (channels === 1) {\n\t\t\t\tformat.color_space = ColorSpace.G;\n\t\t\t} else if (channels === 3) {\n\t\t\t\tformat.color_space = ColorSpace.RGB;\n\t\t\t} else {\n\t\t\t\tformat.color_space = ColorSpace.unkownFormat('Unknown', channels);\n\t\t\t}\n\t\t} else {\n\t\t\t// If there is no 'pixi' atom assume RGB. I don't know if this is\n\t\t\t// the correct way of handling this.\n\t\t\tformat.color_space = ColorSpace.RGB;\n\t\t}\n\n\t\treturn format;\n\t}\n}\n\nmodule.exports = AVIFInfoProvider;\n","/* @flow */\n'use strict';\n\n/*::\nimport type {Dimensions} from '../image-info.js';\n*/\n\nconst InfoProvider = require('../image-info.js'),\n\t  pf = require('../pixel-format');\n\nconst PixelFormat = pf.PixelFormat;\nconst ColorSpace = pf.ColorSpace;\n\nconst VERSION_OFFSET = 0x3;\nconst HEIGHT_OFFSET = 0x6;\nconst WIDTH_OFFSET = 0x8;\nconst SETTINGS_OFFSET = 0xA;\nconst COLOR_TABLE_OFFSET = 0xD;\nconst COLOR_TABLE_AVAILABLE_MASK = 0x80;\nconst COLOR_TABLE_LENGTH_MASK = 0x7;\nconst IMAGE_DESCRIPTOR_OFFSET = 9; // a relative offset from the separator (0x2c)\nconst FILE_TRAILER = 0x3B; // A semicolon;\n\n/**\n * A JPEG info provider.\n */\nclass GIFInfoProvider extends InfoProvider {\n\t/**\n\t * @inheritdoc\n\t */\n\tget_overhead()/*: number */ {\n\t\t// This is the size of the smallest possible GIF, I'm assuming it will\n\t\t// be mostly overhead.\n\t\treturn 35;\n\t}\n\n\t/**\n\t * Get the offset of the next chunk.\n\t * @param  {Buffer} buffer The file buffer\n\t * @param  {number} offset The offset in the buffer.\n\t * @return {number}        The offset of the next chunk.\n\t */\n\tnext_chunk(buffer/*: Buffer */, offset/*: number */)/*: number */ {\n\t\tconst block_length = 2 + buffer.readUInt8(offset + 2);\n\n\t\t// console.log('block_length', block_length);\n\n\t\treturn offset + block_length + this.get_sub_block_length(buffer, offset + block_length + 1) + 1;\n\t}\n\n\t/**\n\t * Get the length of the sub-block.\n\t *\n\t * @param  {Buffer} buffer The file buffer\n\t * @param  {number} offset The offset in the buffer.\n\t * @return {number}        The length of the sub-block.\n\t */\n\tget_sub_block_length(buffer/*: Buffer */, offset/*: number */)/*: number */ {\n\t\tlet sub_block_length = 0;\n\t\tlet size_byte = buffer.readUInt8(offset);\n\n\t\t// console.log('starting searching for sub-blocks, initial sub-block size', size_byte.toString(16));\n\t\t// if the initial size_byte is 0x00 then we are dealing with a non-data chunk.\n\t\tif (size_byte !== 0) {\n\t\t\twhile (size_byte !== 0) {\n\t\t\t\tsize_byte = buffer.readUInt8(offset + sub_block_length);\n\t\t\t\t// console.log(size_byte);\n\t\t\t\tsub_block_length += size_byte + 1;\n\t\t\t}\n\t\t} else {\n\t\t\tsub_block_length = 1;\n\t\t}\n\n\t\t// console.log('finished searching for sub-blocks, total length is', sub_block_length + 1);\n\n\t\treturn sub_block_length;\n\t}\n\n\t/**\n\t * Get the length of the color table.\n\t *\n\t * @param  {Buffer} buffer The file buffer.\n\t * @param  {number} offset The offset in the buffer.\n\t * @return {number}        The length of the color table.\n\t */\n\tget_color_table_length(buffer/*: Buffer */, offset/*: number */)/*: number */ {\n\t\tconst color_table_bits = buffer.readUInt8(offset) & COLOR_TABLE_LENGTH_MASK;\n\n\t\t// console.log('color table bits', color_table_bits.toString(16));\n\n\t\treturn 3 * Math.pow(2, color_table_bits + 1);\n\t}\n\n\t/**\n\t * Determine if a color table exists.\n\t *\n\t * @param  {Buffer}  buffer The file buffer.\n\t * @param  {number}  offset The offset in buffer.\n\t * @return {boolean}        True if the file has a color table.\n\t */\n\thas_color_table(buffer/*: Buffer */, offset/*: number */)/*: boolean */ {\n\t\t// console.log('has color table', !!(buffer.readUInt8(offset) & COLOR_TABLE_AVAILABLE_MASK));\n\t\treturn !!(buffer.readUInt8(offset) & COLOR_TABLE_AVAILABLE_MASK);\n\t}\n\n\t/**\n\t * Get the version string.\n\t *\n\t * @param  {Buffer} buffer The file buffer\n\t * @return {string}        The version string.\n\t */\n\tget_version(buffer/*: Buffer */)/*: string */ {\n\t\treturn buffer.toString('ascii', VERSION_OFFSET, HEIGHT_OFFSET);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget_dimensions(buffer/*: Buffer */)/*: Dimensions */ {\n\t\tlet frame_count = 0;\n\t\tlet found = false;\n\t\tlet offset = 0;\n\n\t\tif (this.has_color_table(buffer, SETTINGS_OFFSET)) {\n\t\t\tconst color_table_length = this.get_color_table_length(buffer, SETTINGS_OFFSET);\n\t\t\toffset = COLOR_TABLE_OFFSET + color_table_length;\n\t\t} else {\n\t\t\toffset = SETTINGS_OFFSET + 3;\n\t\t}\n\n\t\t// console.log(offset);\n\n\t\twhile (!found) {\n\t\t\tlet block_header = buffer.readUInt8(offset);\n\n\t\t\t// console.log('Offset of block', offset);\n\t\t\t// console.log('block header (should be 0x21)', block_header.toString(16));\n\t\t\t// console.log('block label', buffer.readUInt8(offset + 1).toString(16));\n\n\t\t\tif (block_header === 0x2c) {\n\t\t\t\tframe_count++;\n\t\t\t\t// console.log(buffer.readUInt8(offset).toString(16));\n\t\t\t\toffset += IMAGE_DESCRIPTOR_OFFSET;\n\t\t\t\t// Skip the color table, if present\n\n\t\t\t\t// console.log('color table return', this.has_color_table(buffer, offset));\n\t\t\t\tif (this.has_color_table(buffer, offset)) {\n\t\t\t\t\t// console.log('has local color table');\n\t\t\t\t\toffset += this.get_color_table_length(buffer, offset);\n\t\t\t\t}\n\t\t\t\t// Skip the Packed values byte and the \"LZW Minimum Code Size\" byte.\n\t\t\t\toffset += 2;\n\t\t\t\t// Skip the image data\n\t\t\t\toffset += this.get_sub_block_length(buffer, offset);\n\t\t\t\t// console.log('offset', offset);\n\t\t\t\t// console.log('this should be a block header', buffer.readUInt8(offset).toString(16));\n\t\t\t}\n\n\t\t\t// console.log('near the end', offset, buffer.length);\n\n\t\t\tif (offset + 1 >= buffer.length) {\n\t\t\t\t// Normal Termination\n\t\t\t\t// We've reached the end of the file\n\t\t\t\tfound = true;\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tblock_header = buffer.readUInt8(offset);\n\n\t\t\t\tif (block_header !== 0x21 && block_header !== 0x2c) {\n\t\t\t\t\t// Abnormal Termination\n\t\t\t\t\t// There is either junk at the end of the file or its corrupted\n\t\t\t\t\t// (or the programmer made a mistake).\n\t\t\t\t\tfound = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toffset = this.next_chunk(buffer, offset);\n\n\t\t\t// console.log(offset);\n\t\t}\n\n\t\t// console.log('gif version', this.get_version(buffer));\n\t\t// console.log('number of frames', frame_count);\n\n\t\treturn {\n\t\t\t'width': buffer.readUInt16LE(HEIGHT_OFFSET),\n\t\t\t'height': buffer.readUInt16LE(WIDTH_OFFSET),\n\t\t\t'frames': frame_count,\n\t\t};\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tis_truncated(buffer/*: Buffer */)/*: boolean */ {\n\t\treturn buffer.readUInt8(buffer.length - 1) !== FILE_TRAILER;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget_pixel_format()/*: PixelFormat */ {\n\t\tconst format = new PixelFormat();\n\n\t\tformat.color_space = ColorSpace.RGB;\n\t\tformat.indexed = true;\n\t\tformat.bit_depth.R = 8;\n\t\tformat.bit_depth.G = 8;\n\t\tformat.bit_depth.B = 8;\n\n\t\t// TODO: handle this properly\n\t\tformat.bit_depth.alpha = 1;\n\n\t\treturn format;\n\t}\n}\n\nmodule.exports = GIFInfoProvider;\n","// This is what I percieve to be the ISOBMFF format. This is reverse engineered\n// from several files of different types.\n\nconst MAX_BLOCKS = 2048;\n\n\n// Root Block Tags\n//\n// MP4\n// ---\n// ftyp\n// free\n// mdat\n// moov\n//\n// AVIF\n// ----\n// ftyp\n// meta\n// mdat\n//\n// HEIC\n// ----\n// ftyp\n// meta\n// mdat\n\n\n/** @typedef {ISOBMFFAtom | ISOBMFFBlock} BlockOrAtom */\n\n/**\n * This is a block read from an ISOBMFF encoded file.\n */\nclass ISOBMFFAtom {\n\t/**\n\t * Construct a new ISOBMFFBlock.\n\t * @param  {number} length   The length of the block.\n\t * @param  {string} tag      The block tag.\n\t */\n\tconstructor(length/*: number */, tag/*: string */) {\n\t\tthis.length = length;\n\t\tthis.tag = tag;\n\t}\n\n\t/**\n\t * Read a block from a buffer.\n\t * @param  {Buffer} buffer  The buffer object to read from.\n\t * @param  {number} offset  The offset to the beginning of the block.\n\t * @return {ISOBMFFAtom}   The block that was read.\n\t */\n\tstatic read(buffer/*: Buffer*/, offset/*: number */) {\n\t\tlet block;\n\t\tconst length = buffer.readUInt32BE(offset);\n\n\t\tif (length) {\n\t\t\tconst tag = buffer.toString('ascii', offset + 4, offset + 8);\n\t\t\tconst content = buffer.subarray(offset + 8, offset + length);\n\n\t\t\tif (tag in BLOCK_TYPES) {\n\t\t\t\tblock = new BLOCK_TYPES[tag](length, tag, content);\n\t\t\t} else {\n\t\t\t\tblock = new UnknownAtom(length, tag, content);\n\t\t\t}\n\t\t} else {\n\t\t\tblock = new NullAtom();\n\t\t}\n\n\t\treturn block;\n\t}\n}\n\n/**\n * A ISO BMFF Atom that can contains other Blocks or Atoms.\n */\nclass ISOBMFFBlock extends ISOBMFFAtom {\n\t/**\n\t * Construct a new ISOBMFF block\n\t * @param  {number} length  The length of the block.\n\t * @param  {string} tag     The tag.\n\t * @param  {Buffer} buffer  The content of the block.\n\t * @param  {number} offset  The offset to the beginning of the container.\n\t */\n\tconstructor(length, tag, buffer, offset = 0) {\n\t\tsuper(length, tag);\n\n\t\tthis._buffer = buffer;\n\t\tthis._offset = offset;\n\t\tthis._children = null;\n\t}\n\n\t/**\n\t * Lazy load the children.\n\t * @return {{string: BlockOrAtom}} The children of this block.\n\t */\n\tget children() {\n\t\tconst buffer = this._buffer;\n\t\tconst offset = this._offset;\n\n\t\tif (!this._children) {\n\t\t\tthis._children = {};\n\n\t\t\tfor (const block of this.readBlocks(buffer, offset)) {\n\t\t\t\t// Only take the first block for a particular tag to prevent\n\t\t\t\t// appending data to overwrite content in the file. Which might be\n\t\t\t\t// a security issue.\n\t\t\t\t//\n\t\t\t\t// Also skip null blocks.\n\t\t\t\tif (block.tag !== null && !this._children[block.tag]) {\n\t\t\t\t\tthis._children[block.tag] = block;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._children;\n\t}\n\n\t/**\n\t * Read all of the blocks from this buffer starting at offset.\n\t *\n\t * @param  {Buffer} buffer The buffer object to read from\n\t * @param  {number} offset The offset to start reading from.\n\t * @yields {ISOBMFFBlock} for each block in the buffer.\n\t */\n\t* readBlocks(buffer, offset) {\n\t\tlet bytesProcessed = 0;\n\t\tlet blocksTillMax = MAX_BLOCKS;\n\n\t\twhile (bytesProcessed + offset < buffer.length && blocksTillMax) {\n\t\t\tconst block = ISOBMFFAtom.read(buffer, offset + bytesProcessed);\n\t\t\tbytesProcessed += block.length;\n\t\t\tblocksTillMax--;\n\n\t\t\tyield block;\n\t\t}\n\t}\n}\n\n/**\n * A ISO BMFF block for an unidentified block.\n */\nclass UnknownAtom extends ISOBMFFAtom {\n\t/**\n\t * Construct a new Unknown block.\n\t * @param  {number} length   The length of the block.\n\t * @param  {string} tag      The block tag.\n\t * @param  {Buffer} content  The content of the block.\n\t */\n\tconstructor(length, tag, content) {\n\t\tsuper(length, tag);\n\n\t\tthis.content = content;\n\t}\n}\n\n/**\n * A null atom for atoms that have zero length.\n */\nclass NullAtom extends ISOBMFFAtom {\n\t/**\n\t * Construct a null atom.\n\t */\n\tconstructor() {\n\t\tsuper(4, null);\n\t}\n}\n\n/**\n * This is the root block for all ISOBMFF block, The whole file.\n */\nclass RootBlock extends ISOBMFFBlock {\n\t/**\n\t * Construct a new root block.\n\t * @param  {Buffer} buffer The buffer that contains the file.\n\t */\n\tconstructor(buffer) {\n\t\tsuper(buffer.length, null, buffer);\n\t}\n}\n\n/**\n * A ISO BMFF block for an ftyp block.\n * ISO\n */\nclass FtypAtom extends ISOBMFFAtom {\n\t/**\n\t * Construct a new Ftyp block.\n\t * @param  {number} length   The length of the block.\n\t * @param  {string} tag      The block tag.\n\t * @param  {Buffer} content  The content of the block.\n\t */\n\tconstructor(length, tag, content) {\n\t\tsuper(length, tag);\n\n\t\tthis.majorBrand = this.readBrand(0, content);\n\t\tthis.minorVersion = content.readUInt32BE(4);\n\t\tthis.compatibleBrands = [];\n\n\t\tconst numberOfCompatBrands = (length - 16) / 4;\n\n\t\tfor (let i = 0; i < numberOfCompatBrands; i++) {\n\t\t\tthis.compatibleBrands.push(this.readBrand((i * 4) + 8, content));\n\t\t}\n\t}\n\n\t/**\n\t * Read a brand from a block.\n\t * @param  {number} offset The offset to start reading at\n\t * @param  {Buffer} buffer The buffer to read from\n\t * @return {string}        The brand.\n\t */\n\treadBrand(offset, buffer) {\n\t\treturn buffer.subarray(offset, offset + 4).toString('ascii');\n\t}\n}\n\n/**\n * The ISPE atom. Contains the image width and image height.\n */\nclass ISPEAtom extends ISOBMFFAtom {\n\t/**\n\t * Construct a new ispe block.\n\t * @param  {number} length   The length of the block.\n\t * @param  {string} tag      The block tag.\n\t * @param  {Buffer} content  The content of the block.\n\t */\n\tconstructor(length, tag, content) {\n\t\tsuper(length, tag);\n\t\tthis.unknown = content.readUInt32BE(0);\n\t\tthis.width = content.readUInt32BE(4);\n\t\tthis.height = content.readUInt32BE(8);\n\t}\n}\n\n/**\n * The PIXI atom. Contains the Pixel format.\n */\nclass PIXIAtom extends ISOBMFFAtom {\n\t/**\n\t * Construct a new pixi block.\n\t * @param  {number} length   The length of the block.\n\t * @param  {string} tag      The block tag.\n\t * @param  {Buffer} buffer  The content of the block.\n\t */\n\tconstructor(length, tag, buffer) {\n\t\tsuper(length, tag, buffer);\n\n\t\tconst UNKNOWN_BITS = 4;\n\n\t\tthis.unknown = buffer.readUInt32BE(0);\n\t\tthis.channels = buffer.readUInt8(UNKNOWN_BITS);\n\t\tthis.bitsPerChannel = [];\n\n\t\tfor (let i = 0; i < this.channels; i++) {\n\t\t\tthis.bitsPerChannel.push(buffer.readUInt8(UNKNOWN_BITS + 1));\n\t\t}\n\t}\n}\n\n\n/**\n * A 'iinf' block.\n */\nclass IINFBlock extends ISOBMFFBlock {\n\t/**\n\t * Construct a new IINFBlock.\n\t * @param  {number} length The length of the block\n\t * @param  {string} tag    The block tag\n\t * @param  {Buffer} buffer The buffer that contains the block content\n\t */\n\tconstructor(length, tag, buffer) {\n\t\tsuper(length, tag, buffer, 6);\n\t}\n}\n\n\nconst BLOCK_TYPES = {\n\t'ftyp': FtypAtom,\n\n\t// HEIC/AVIF\n\t'meta': ISOBMFFBlock,\n\t'iprp': ISOBMFFBlock,\n\t'iinf': IINFBlock,\n\t'ipco': ISOBMFFBlock,\n\t'ispe': ISPEAtom,\n\t'pixi': PIXIAtom,\n\t// 'colr': COLRAtom, // Color Profile\n};\n\nmodule.exports = {\n\tISOBMFFAtom,\n\tRootBlock,\n};\n","/* @flow */\n'use strict';\n\n/*::\nimport type {Dimensions} from '../image-info.js';\n*/\n\nconst InfoProvider = require('../image-info.js'),\n\t  pf = require('../pixel-format');\n\nconst PixelFormat = pf.PixelFormat;\nconst ColorSpace = pf.ColorSpace;\n\nconst MARKER_LENGTH = 2;\nconst CHUNKS_WITH_DIMS = 0xF0;\nconst HEIGHT_OFFSET = 5;\nconst WIDTH_OFFSET = 7;\nconst CHANNELS_OFFSET = 9;\nconst FILE_TRAILER = 0xFFD9;\n\n// https://www.w3.org/Graphics/JPEG/jfif3.pdf\n// http://www.itu.int/rec/T-REC-T.871-201105-I/en\n\n/**\n * A JPEG info provider.\n */\nclass JPGInfoProvider extends InfoProvider {\n\t/**\n\t * Get the offset of the next chunk.\n\t * @param {Buffer} buffer  The file buffer.\n\t * @param {number} offset  The offset of the current chunk.\n\t * @return {number} the offset of the next chunk\n\t */\n\tnext_chunk(buffer/*: Buffer */, offset/*: number */)/*: number */ {\n\t\treturn offset + MARKER_LENGTH + buffer.readUInt16BE(offset + 2); // this.calculate_chunk_length(s1, s2);\n\t}\n\n\t/**\n\t * Determines if this chunk is a SOFn chunk that may conatain matadata for\n\t * this image.\n\t *\n\t * @param  {Buffer}  buffer The buffer source of the image.\n\t * @param  {number}  offset The offset of the start of the chunk\n\t * @return {Boolean}        Returns true if it is a SOFn chunk.\n\t */\n\tis_sof_chunk(buffer/*: Buffer */, offset/*: number */)/*: boolean */ {\n\t\tconst sof_byte = buffer.readUInt8(offset + 1);\n\n\t\treturn (sof_byte & CHUNKS_WITH_DIMS) === 0xC0 && sof_byte !== 0xC4 && sof_byte !== 0xC8 && sof_byte !== 0xCC;\n\t}\n\n\t/**\n\t * Iterate all the chunks in the file.\n\t *\n\t * @param {Buffer} buffer The buffer to scan through looking for chunks.\n\t * @yields {number} The offset of the next chunk.\n\t */\n\t* chunks(buffer/*: Buffer */)/*: Generator<number, void, number> */ {\n\t\tlet offset = this.next_chunk(buffer, MARKER_LENGTH);\n\t\tlet found = false;\n\n\t\twhile (!found) {\n\t\t\tyield offset;\n\n\t\t\toffset = this.next_chunk(buffer, offset);\n\n\t\t\t// console.log(offset, buffer.length);\n\n\t\t\tif (offset > buffer.length) {\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget_overhead()/*: number */ {\n\t\t// This is the size of the smallest possible JPG, I'm assuming it will\n\t\t// be mostly overhead.\n\t\treturn 119;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tis_truncated(buffer/*: Buffer */)/*: boolean */ {\n\t\treturn buffer.readUInt16BE(buffer.length - 2) !== FILE_TRAILER;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget_dimensions(buffer/*: Buffer */)/*: Dimensions */ {\n\t\tlet width = null;\n\t\tlet height = null;\n\n\t\tfor (const offset of this.chunks(buffer)) {\n\t\t\tif (this.is_sof_chunk(buffer, offset)) {\n\t\t\t\t// console.log('Reading header');\n\n\t\t\t\twidth = buffer.readUInt16BE(offset + WIDTH_OFFSET);\n\t\t\t\theight = buffer.readUInt16BE(offset + HEIGHT_OFFSET);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!width || !height) {\n\t\t\tthrow new Error('Dimensions not found');\n\t\t}\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tframes: 1,\n\t\t};\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget_pixel_format(buffer/*: Buffer */)/*: PixelFormat */ {\n\t\tconst format = new PixelFormat();\n\t\tlet channels = null;\n\n\t\tfor (const offset of this.chunks(buffer)) {\n\t\t\tif (this.is_sof_chunk(buffer, offset)) {\n\t\t\t\tchannels = buffer.readUInt8(offset + CHANNELS_OFFSET);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (channels === 1) {\n\t\t\tformat.color_space = ColorSpace.G;\n\t\t} else if (channels === 3) {\n\t\t\tformat.color_space = ColorSpace.RGB;\n\t\t} else if (channels === 4) {\n\t\t\tformat.color_space = ColorSpace.CMYK;\n\t\t} else {\n\t\t\tformat.color_space = ColorSpace.unkownFormat('Unknown', channels);\n\t\t}\n\n\t\treturn format;\n\t}\n}\n\nmodule.exports = JPGInfoProvider;\n","/* @flow */\n'use strict';\n\n/*::\nimport type {Dimensions} from '../image-info.js';\n*/\n\nconst InfoProvider = require('../image-info.js'),\n\t  pf = require('../pixel-format');\n\nconst PixelFormat = pf.PixelFormat;\nconst ColorSpace = pf.ColorSpace;\n\nconst {/* U32, */ BitStream} = require('./jxl/bit-stream');\nconst {SizeHeader} = require('./jxl/size-header');\nconst {ImageMetadata} = require('./jxl/image-metadata');\nconst {COLOR_SPACE} = require('./jxl/color-encoding');\n\n// const CONTAINER_HEADER_SIZE = 48;\n// const MAX_CODESTREAM_BASIC_INFO_SIZE = 50;\n// const MAX_BASIC_INFO_SIZE = CONTAINER_HEADER_SIZE + MAX_CODESTREAM_BASIC_INFO_SIZE;\n\n// https://gitlab.com/wg1/jpeg-xl/-/blob/master/lib/jxl/decode.cc\n// https://arxiv.org/ftp/arxiv/papers/1908/1908.03565.pdf\n\n// signature: Signature\n// size: SizeHeader\n// metadata: ImageMetadata\n\n/**\n * A JPEG XL info provider.\n */\nclass JXLInfoProvider extends InfoProvider {\n\t/**\n\t * @inheritdoc\n\t */\n\tget_overhead()/*: number */ {\n\t\t// This is the size of the smallest possible JPG, I'm assuming it will\n\t\t// be mostly overhead.\n\t\treturn 119;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tis_truncated(buffer/*: Buffer */)/*: boolean */ {\n\t\treturn buffer.readUInt8(buffer.length - 1) !== 0x00;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget_dimensions(buffer/*: Buffer */)/*: Dimensions */ {\n\t\tconst bit_stream = new BitStream(buffer, 0);\n\n\t\tconst size_header = new SizeHeader(bit_stream);\n\n\t\treturn {\n\t\t\twidth: size_header.get_xsize(),\n\t\t\theight: size_header.get_ysize(),\n\t\t\tframes: 1, // TODO: read this from ImageMetadata2\n\t\t};\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget_pixel_format(buffer/*: Buffer */)/*: PixelFormat */ {\n\t\tconst bit_stream = new BitStream(buffer, 0);\n\n\t\t// const size_header = new SizeHeader(bit_stream);\n\t\tconst image_metadata = new ImageMetadata(bit_stream);\n\t\tconst color_encoding = image_metadata.color_encoding;\n\n\t\tconst format = new PixelFormat();\n\n\t\tif (color_encoding) {\n\t\t\tif (color_encoding.color_space === COLOR_SPACE.K_GREY) {\n\t\t\t\tformat.color_space = ColorSpace.G;\n\t\t\t} else if (color_encoding.color_space === COLOR_SPACE.K_RGB) {\n\t\t\t\tformat.color_space = ColorSpace.RGB;\n\t\t\t} else if (color_encoding.color_space === COLOR_SPACE.K_XYZ) {\n\t\t\t\tformat.color_space = ColorSpace.XYZ;\n\t\t\t} else if (color_encoding.color_space === COLOR_SPACE.K_XYB) {\n\t\t\t\tformat.color_space = ColorSpace.XYB;\n\t\t\t} else {\n\t\t\t\tformat.color_space = ColorSpace.unkownFormat(color_encoding);\n\t\t\t}\n\t\t}\n\n\t\treturn format;\n\t}\n}\n\nmodule.exports = JXLInfoProvider;\n","/* @flow */\n\nconst U32_MAX = 0xFFFFFFFF;\n\nconst VAL = 0;\nconst BITS = 1;\nconst BITS_OFFSET = 2;\n\nconst WORD_SIZE = 8;\nconst QUAD_WORD_SIZE = WORD_SIZE * 4;\n\n/*::\ntype Distribution =\n\t[0, number] |\n\t[1, number] |\n\t[2, number, number];\n\ntype Distribution32 = [\n\tDistribution,\n\tDistribution,\n\tDistribution,\n\tDistribution\n];\n\nexport type CustomXY = {\n\tx: number,\n\ty: number\n};\n\ntype EnumTable = Set<number>;\n*/\n\nfunction dbg_byte(bits) {\n\treturn ('00000000' + bits.toString(2)).slice(-8);\n}\n\nclass IllformedStreamError extends Error {\n\n}\n\n/**\n * The JXL bitstream.\n */\nclass BitStream {\n\t/*::\n\tbuffer: Buffer;\n\toffset: number;\n\tsub_bit: number;\n\tcurrent_byte: number;\n\t*/\n\tconstructor(buffer/*: Buffer */, offset/*: number */ = 0) {\n\t\tthis.buffer = buffer;\n\t\tthis.offset = offset;\n\t\tthis.sub_bit = 0;\n\t\tthis.current_byte = buffer.readUInt8(offset);\n\t}\n\n\tread_from_byte(byte/*: number */, offset/*: number */, bits/*: number */)/*: number */ {\n\t\tlet value = byte;\n\n\t\t// This builds the mask with the correct number of '1'. For example:\n\t\t//\n\t\t// | Bits | Mask     |\n\t\t// | ---- | -------- |\n\t\t// |    1 | 00000001 |\n\t\t// |    2 | 00000011 |\n\t\t// |  ... |    ...   |\n\t\t// |    8 | 11111111 |\n\t\tlet mask = (1 << bits) - 1;\n\n\t\t// console.log('mask: ', mask.toString(2));\n\t\t// console.log('mask sub_bit:', this.sub_bit, '- mask bits: ', bits);\n\n\t\t// This positions the mask in the correct spot...\n\t\t//\n\t\t// | sub_bit | Bits | Mask     |\n\t\t// | ------- | ---- | -------- |\n\t\t// |       1 |    2 | 00000011 |\n\t\t// |       2 |    2 | 00000110 |\n\t\t// |   ...   |  ... |    ...   |\n\t\t// |       8 |    2 | 10000000 | (and one from the next byte).\n\t\tmask = (mask << offset) >>> 0;\n\n\t\t// console.log('mask:', mask.toString(2), '- value:', value.toString(2));\n\t\t// console.log('value: ', (value & mask).toString(2));\n\n\t\tvalue = (value & mask) >>> offset;\n\n\t\treturn value;\n\t}\n\n\tread_bits(bits/*: number */)/*: number */ {\n\t\tif (bits > QUAD_WORD_SIZE) {\n\t\t\tthrow new Error(`Can not read more than ${ QUAD_WORD_SIZE } bits at a time. Attempting to read ${ bits }`);\n\t\t}\n\n\t\tif (bits === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet leftovers = 0;\n\t\tlet shift = 0;\n\t\tconst start_bits = WORD_SIZE - this.sub_bit;\n\n\t\t// console.log('start_bits', start_bits);\n\n\t\t// Read whats leftover from the previous byte. So from here on its whole\n\t\t// bytes only.\n\t\tif (this.sub_bit > 0 && bits > start_bits) {\n\t\t\t// console.log('bits needed from previous byte', start_bits);\n\t\t\tbits -= start_bits\n\t\t\tleftovers = this.read_from_byte(this.current_byte, this.sub_bit, start_bits);\n\t\t\tshift = start_bits;\n\n\t\t\tthis.offset += 1;\n\t\t\tthis.current_byte = this.buffer.readUInt8(this.offset);\n\t\t\tthis.sub_bit = 0;\n\t\t}\n\n\t\tconst bytes = Math.floor(bits / WORD_SIZE);\n\t\tlet value = leftovers;\n\n\t\t// Read whole bytes\n\t\tif (bytes > 0) {\n\t\t\tfor (let byte = 0; byte < bytes; byte++) {\n\t\t\t\tlet read = this.read_from_byte(this.current_byte, 0, WORD_SIZE);\n\n\t\t\t\t// console.log(`byte ${byte}: `, dbg_byte(read));\n\n\t\t\t\tif (shift) {\n\t\t\t\t\tread = read << shift;\n\t\t\t\t}\n\n\t\t\t\t// console.log('value: ', value.toString(2));\n\n\t\t\t\tthis.offset += 1;\n\t\t\t\tthis.current_byte = this.buffer.readUInt8(this.offset);\n\n\t\t\t\tshift += WORD_SIZE;\n\n\t\t\t\tvalue = value | read;\n\t\t\t}\n\n\t\t\tthis.sub_bit = 0;\n\t\t}\n\n\t\t// There may still be a couple of bits left to read.\n\t\tbits = bits - (bytes * WORD_SIZE);\n\n\t\tif (bits > 0) {\n\t\t\tlet read = this.read_from_byte(this.current_byte, this.sub_bit, bits);\n\n\t\t\t// console.log(`byte last: `, dbg_byte(read));\n\n\t\t\tif (shift) {\n\t\t\t\tread = read << shift;\n\t\t\t}\n\n\t\t\tvalue = value | read;\n\n\t\t\tthis.sub_bit += bits;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tread_boolean()/*: boolean */ {\n\t\treturn !!this.read_bits(1);\n\t}\n\n\tread_u32(...distributions/*: Distribution32 */)/*: number */ {\n\t\tif (distributions.length > 4) {\n\t\t\tthrow new Error('U32: A u32 takes only 4 distributions.');\n\t\t}\n\n\t\tconst u = this.read_bits(2);\n\t\tconst dist = distributions[u];\n\n\t\t// console.log('distribution', u.toString(2));\n\n\t\tif (dist[0] === VAL) {\n\t\t\treturn dist[1];\n\t\t} else if (dist[0] === BITS) {\n\t\t\treturn this.read_bits(dist[1]);\n\t\t} else if (dist[0] === BITS_OFFSET) {\n\t\t\tif (dist.length !== 3) {\n\t\t\t\tthrow new Error('U32: incorrect number of parameters for BitsOffset distribution.');\n\t\t\t}\n\t\t\treturn (dist[2] + this.read_bits(dist[1])) % U32_MAX;\n\t\t} else {\n\t\t\tthrow new Error('U32: Unknown distribution.')\n\t\t}\n\t}\n\n\tread_s32(...distributions/*: Distribution32 */)/*: number */ {\n\t\tlet v = this.read_u32(...distributions);\n\n\t\tif (v % 2 === 0) {\n\t\t\treturn v >> 1;\n\t\t} else if (v === U32_MAX) {\n\t\t\treturn 0x80000000;\n\t\t} else {\n\t\t\treturn -(v >> 1);\n\t\t}\n\t}\n\n\tread_f16()/*: number */ {\n\t\tconst bits16 = this.read_bits(16);\n\t\tconst sign = bits16 >> 15;\n\t\tconst biased_exp = ( bits16 >> 10 ) & 0x1F;\n\t\tconst mantissa = bits16 & 0x3FF;\n\t\tlet value;\n\n\t\tif (biased_exp === 31) {\n\t\t\tthrow new IllformedStreamError('F16: Invalid biased exponent.');\n\t\t}\n\n\t\tif ( biased_exp == 0 ) {\n\t\t\tvalue = mantissa / ( 1 << 24 );\n\t\t} else {\n\t\t\tconst biased_exp32 = biased_exp + ( 127 - 15 );\n\t\t\tconst mantissa32 = mantissa << ( 23 - 10 );\n\t\t\tconst buffer = new ArrayBuffer(4);\n\t\t\t(new Uint32Array(buffer))[0] = ( sign << 31 ) | ( biased_exp32 << 23 ) | mantissa32;\n\t\t\tvalue = (new Float32Array(buffer))[0];\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tread_customxy()/*: CustomXY */ {\n\t\treturn {\n\t\t\tx: this.read_s32(\n\t\t\t\t[BITS, 19],\n\t\t\t\t[BITS_OFFSET, 19, 524288],\n\t\t\t\t[BITS_OFFSET, 20, 1048576],\n\t\t\t\t[BITS_OFFSET, 21, 2097152]\n\t\t\t),\n\t\t\ty: this.read_s32(\n\t\t\t\t[BITS, 19],\n\t\t\t\t[BITS_OFFSET, 19, 524288],\n\t\t\t\t[BITS_OFFSET, 20, 1048576],\n\t\t\t\t[BITS_OFFSET, 21, 2097152]\n\t\t\t)\n\t\t};\n\t}\n\n\tread_enum(enum_table/*: EnumTable */)/*: number */ {\n\t\tconst value = this.read_u32(\n\t\t\t[VAL, 0],\n\t\t\t[VAL, 1],\n\t\t\t[BITS_OFFSET, 4, 2],\n\t\t\t[BITS_OFFSET, 6, 18]\n\t\t);\n\n\t\tif (value > 63) {\n\t\t\tthrow new IllformedStreamError(`Enum: Invalid value: ${ value }`);\n\t\t} else if (!enum_table.has(value)) {\n\t\t\tthrow new IllformedStreamError(`Enum: Unknown value: ${ value }`);\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tget_bits_read()/*: number */ {\n\t\treturn (this.offset * 8) + this.sub_bit;\n\t}\n}\n\nmodule.exports = {\n\tBitStream,\n\tIllformedStreamError,\n\tU32: {\n\t\tVAL,\n\t\tBITS,\n\t\tBITS_OFFSET,\n\t}\n};\n","/* @flow */\n\n/*::\nimport type {BitStream, CustomXY} from './bit-stream';\n*/\n\n/**\n * Color Space enumeration.\n *\n * @type {Object}\n */\nconst COLOR_SPACE = {\n\tK_RGB: 0,\n\tK_GREY: 1,\n\tK_XYB: 2,\n\tK_UNKNOWN: 3,\n\tK_XYZ: 4,\n};\nconst ENUM_COLOR_SPACE = new Set();\n\nENUM_COLOR_SPACE.add(COLOR_SPACE.K_RGB);\nENUM_COLOR_SPACE.add(COLOR_SPACE.K_GREY);\nENUM_COLOR_SPACE.add(COLOR_SPACE.K_XYB);\nENUM_COLOR_SPACE.add(COLOR_SPACE.K_UNKNOWN);\nENUM_COLOR_SPACE.add(COLOR_SPACE.K_XYZ);\n\n/**\n * White Point enumeration.\n * @type {Object}\n */\nconst WHITE_POINT = {\n\tK_D65: 1,\n\tK_CUSTOM: 2,\n\tK_E: 10,\n\tK_DCI: 11,\n};\n\nconst ENUM_WHITE_POINT = new Set();\n\nENUM_WHITE_POINT.add(WHITE_POINT.K_D65);\nENUM_WHITE_POINT.add(WHITE_POINT.K_CUSTOM);\nENUM_WHITE_POINT.add(WHITE_POINT.K_E);\nENUM_WHITE_POINT.add(WHITE_POINT.K_DCI);\n\n/**\n * Primaries enumeration.\n * @type {Object}\n */\nconst PRIMARIES = {\n\tK_SRGB: 1,\n\tK_CUSTOM: 2,\n\tK_2100: 9,\n\tK_P3: 11,\n};\nconst ENUM_PRIMARIES = new Set();\n\nENUM_PRIMARIES.add(PRIMARIES.K_SRGB);\nENUM_PRIMARIES.add(PRIMARIES.K_CUSTOM);\nENUM_PRIMARIES.add(PRIMARIES.K_2100);\nENUM_PRIMARIES.add(PRIMARIES.K_P3);\n\n/**\n * Transfer function enumeration.\n * @type {Object}\n */\nconst TRANSFER_FUNCTION = {\n\tK_709: 1,\n\tK_UNKNOWN: 2,\n\tK_LINEAR: 8,\n\tK_SRGB: 13,\n\tK_PQ: 16,\n\tK_DCI: 17,\n\tK_HLG: 18,\n};\nconst ENUM_TRANSFER_FUNCTION = new Set();\n\nENUM_TRANSFER_FUNCTION.add(TRANSFER_FUNCTION.K_709);\nENUM_TRANSFER_FUNCTION.add(TRANSFER_FUNCTION.K_UNKNOWN);\nENUM_TRANSFER_FUNCTION.add(TRANSFER_FUNCTION.K_LINEAR);\nENUM_TRANSFER_FUNCTION.add(TRANSFER_FUNCTION.K_SRGB);\nENUM_TRANSFER_FUNCTION.add(TRANSFER_FUNCTION.K_PQ);\nENUM_TRANSFER_FUNCTION.add(TRANSFER_FUNCTION.K_DCI);\nENUM_TRANSFER_FUNCTION.add(TRANSFER_FUNCTION.K_HLG);\n\n\n/**\n * Rendering intent enumeration.\n * @type {Object}\n */\nconst RENDERING_INTENT = {\n\tK_PERCEPTUAL: 0,\n\tK_RELATIVE: 1,\n\tK_SATURATION: 2,\n\tK_ABSOLUTE: 3,\n};\nconst ENUM_RENDERING_INTENT = new Set();\n\nENUM_RENDERING_INTENT.add(RENDERING_INTENT.K_PERCEPTUAL);\nENUM_RENDERING_INTENT.add(RENDERING_INTENT.K_RELATIVE);\nENUM_RENDERING_INTENT.add(RENDERING_INTENT.K_SATURATION);\nENUM_RENDERING_INTENT.add(RENDERING_INTENT.K_ABSOLUTE);\n\n/**\n * The JXL color encoding header.\n */\nclass ColorEncoding {\n\t/*::\n\treceived_icc: boolean;\n\topaque_icc: boolean;\n\tcolor_space: number;\n\twhite_point: number;\n\twhite: CustomXY;\n\tprimaries: number;\n\tred: CustomXY | null;\n\tgreen: CustomXY | null;\n\tblue: CustomXY | null;\n\thave_gamma: boolean;\n\tgamma: number;\n\ttransfer_function: number;\n\trendering_intent: number;\n\t*/\n\tconstructor(stream/*: ?BitStream */) {\n\n\t\tthis.received_icc = false;\n\t\tthis.opaque_icc = false;\n\t\tthis.color_space = COLOR_SPACE.K_RGB;\n\t\tthis.white_point = WHITE_POINT.K_D65;\n\t\tthis.primaries = PRIMARIES.K_SRGB;\n\t\tthis.have_gamma = false;\n\t\tthis.gamma = 0;\n\t\tthis.transfer_function = TRANSFER_FUNCTION.K_SRGB;\n\t\tthis.rendering_intent = RENDERING_INTENT.K_RELATIVE;\n\n\t\tif (stream) {\n\t\t\tconst all_default = stream.read_boolean();\n\n\t\t\tif (!all_default) {\n\t\t\t\tthis.received_icc = stream.read_boolean();\n\n\t\t\t\tif (this.received_icc) {\n\t\t\t\t\tthis.opaque_icc = stream.read_boolean();\n\t\t\t\t} else {\n\t\t\t\t\tthis.opaque_icc = false;\n\t\t\t\t}\n\n\t\t\t\tconst use_desc = !all_default && !this.opaque_icc;\n\n\t\t\t\tif (use_desc) {\n\t\t\t\t\tthis.color_space = stream.read_enum(ENUM_COLOR_SPACE);\n\n\t\t\t\t\tconst not_xy = this.color_space !== COLOR_SPACE.K_XYB && this.color_space !== COLOR_SPACE.K_XYZ;\n\n\t\t\t\t\tif (not_xy) {\n\t\t\t\t\t\tthis.white_point = stream.read_enum(ENUM_WHITE_POINT);\n\n\t\t\t\t\t\tif (this.white_point === WHITE_POINT.K_CUSTOM) {\n\t\t\t\t\t\t\tthis.white = stream.read_customxy();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.color_space !== COLOR_SPACE.K_GREY) {\n\t\t\t\t\t\t\tthis.primaries = stream.read_enum(ENUM_PRIMARIES);\n\n\t\t\t\t\t\t\tif (this.primaries === PRIMARIES.K_CUSTOM) {\n\t\t\t\t\t\t\t\tthis.red = stream.read_customxy();\n\t\t\t\t\t\t\t\tthis.green = stream.read_customxy();\n\t\t\t\t\t\t\t\tthis.blue = stream.read_customxy();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.have_gamma = stream.read_boolean();\n\n\t\t\t\t\t\tif (this.have_gamma) {\n\t\t\t\t\t\t\tthis.gamma = stream.read_bits(24);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.transfer_function = stream.read_enum(ENUM_TRANSFER_FUNCTION);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.color_space !== COLOR_SPACE.K_GREY) {\n\t\t\t\t\t\t\tthis.rendering_intent = stream.read_enum(ENUM_RENDERING_INTENT);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = {\n\tColorEncoding,\n\tCOLOR_SPACE,\n};\n","/* @flow */\n\n/*::\nimport type {BitStream} from './bit-stream';\n*/\n\nconst {U32} = require('./bit-stream');\nconst {ColorEncoding} = require('./color-encoding');\n\n/*::\nimport type {ImageMetadata2} from './image-metadata2.js';\n*/\n\n/**\n * The JXL image metadata header.\n */\nclass ImageMetadata {\n\t/*::\n\thave_icc: boolean;\n\tbits_per_sample: number;\n\tcolor_encoding: ColorEncoding | null;\n\talpha_bits: number;\n\ttarget_nits: number;\n\tm2: ImageMetadata2 | null;\n\t*/\n\tconstructor(stream/*: BitStream */) {\n\t\tconst all_default = stream.read_boolean();\n\n\t\tif (!all_default) {\n\t\t\tthis.have_icc = stream.read_boolean();\n\t\t\tthis.bits_per_sample = stream.read_u32(\n\t\t\t\t[U32.VAL, 8],\n\t\t\t\t[U32.VAL, 16],\n\t\t\t\t[U32.VAL, 32],\n\t\t\t\t[U32.BITS, 5]\n\t\t\t);\n\t\t\tthis.color_encoding = new ColorEncoding(stream);\n\t\t\tthis.alpha_bits = stream.read_u32(\n\t\t\t\t[U32.VAL, 0],\n\t\t\t\t[U32.VAL, 8],\n\t\t\t\t[U32.VAL, 16],\n\t\t\t\t[U32.BITS, 4]\n\t\t\t);\n\t\t\tthis.target_nits = stream.read_u32(\n\t\t\t\t[U32.VAL, 5],\n\t\t\t\t[U32.VAL, 20],\n\t\t\t\t[U32.VAL, 80],\n\t\t\t\t[U32.BITS_OFFSET, 10, 1]\n\t\t\t);\n\t\t\tthis.m2 = null;\n\t\t} else {\n\t\t\tthis.have_icc = false;\n\t\t\tthis.bits_per_sample = 8;\n\t\t\tthis.color_encoding = new ColorEncoding();\n\t\t\tthis.alpha_bits = 0;\n\t\t\tthis.target_nits = 5 * 50;\n\t\t\tthis.m2 = null;\n\t\t}\n\t}\n}\n\nmodule.exports = {\n\tImageMetadata,\n};\n","/* @flow */\n\n/*::\nimport type {BitStream} from './bit-stream';\n*/\n\nconst {U32} = require('./bit-stream.js');\n\nconst XSIZE_SEPARATE = 0; // xsize coded separately\nconst XSIZE_IS_YSIZE = 1; // xsize = ysize\nconst XSIZE_RATIO_12X10 = 2; // xsize = floor( ysize × 12 / 10)\nconst XSIZE_RATIO_4X3 = 3; // xsize = floor( ysize × 4 / 3)\nconst XSIZE_RATIO_3X2 = 4; // xsize = floor( ysize × 3 / 2)\nconst XSIZE_RATIO_16X9 = 5; // xsize = floor( ysize × 16 / 9)\nconst XSIZE_RATIO_5X4 = 6; // xsize = floor( ysize × 5 / 4)\nconst XSIZE_RATIO_2X1 = 7; // xsize = floor( ysize × 2 / 1)\n\n/**\n * The JXL size header\n */\nclass SizeHeader {\n\t/*::\n\tsmall: boolean;\n\tysize: number;\n\txsize: number;\n\tratio: number;\n\t*/\n\tconstructor(stream/*: BitStream */) {\n\t\tlet ysize;\n\t\tlet xsize;\n\t\tthis.small = stream.read_boolean();\n\n\t\tif (this.small) {\n\t\t\tysize = (stream.read_bits(5) + 1) * 8;\n\t\t} else {\n\t\t\tysize = stream.read_u32(\n\t\t\t\t[U32.BITS, 9],\n\t\t\t\t[U32.BITS, 13],\n\t\t\t\t[U32.BITS, 18],\n\t\t\t\t[U32.BITS, 30]\n\t\t\t) + 1;\n\t\t}\n\n\t\tthis.ratio = stream.read_bits(3);\n\n\t\tif (this.ratio === XSIZE_SEPARATE) {\n\t\t\tif (this.small) {\n\t\t\t\txsize = (stream.read_bits(5) + 1) * 8;\n\t\t\t} else {\n\t\t\t\txsize = stream.read_u32(\n\t\t\t\t\t[U32.BITS, 9],\n\t\t\t\t\t[U32.BITS, 13],\n\t\t\t\t\t[U32.BITS, 18],\n\t\t\t\t\t[U32.BITS, 30]\n\t\t\t\t) + 1;\n\t\t\t}\n\t\t} else if (this.ratio === XSIZE_IS_YSIZE) {\n\t\t\txsize = ysize;\n\t\t} else if (this.ratio === XSIZE_RATIO_12X10) {\n\t\t\txsize = Math.floor(ysize * 12 / 10);\n\t\t} else if (this.ratio === XSIZE_RATIO_4X3) {\n\t\t\txsize = Math.floor(ysize * 4 / 3);\n\t\t} else if (this.ratio === XSIZE_RATIO_3X2) {\n\t\t\txsize = Math.floor(ysize * 3 / 2);\n\t\t} else if (this.ratio === XSIZE_RATIO_16X9) {\n\t\t\txsize = Math.floor(ysize * 16 / 9);\n\t\t} else if (this.ratio === XSIZE_RATIO_5X4) {\n\t\t\txsize = Math.floor(ysize * 5 / 4);\n\t\t} else if (this.ratio === XSIZE_RATIO_2X1) {\n\t\t\txsize = Math.floor(ysize * 2 / 1);\n\t\t} else {\n\t\t\tthrow new Error('SizeHeader: unknown aspect ratio.');\n\t\t}\n\n\t\tthis.ysize = ysize;\n\t\tthis.xsize = xsize;\n\t}\n\n\tget_small()/*: boolean */ {\n\t\treturn this.small;\n\t}\n\n\tget_ysize()/*: number */{\n\t\treturn this.ysize;\n\t}\n\n\tget_xsize()/*: number */{\n\t\treturn this.xsize;\n\t}\n\n\tget_ratio()/*: number */{\n\t\treturn this.ratio;\n\t}\n}\n\nmodule.exports = {\n\tSizeHeader,\n\tRatio: {\n\t\tXSIZE_SEPARATE,\n\t\tXSIZE_IS_YSIZE,\n\t\tXSIZE_RATIO_12X10,\n\t\tXSIZE_RATIO_4X3,\n\t\tXSIZE_RATIO_3X2,\n\t\tXSIZE_RATIO_16X9,\n\t\tXSIZE_RATIO_5X4,\n\t\tXSIZE_RATIO_2X1,\n\t},\n};\n","/* @flow */\n'use strict';\n\n/*::\nimport type {Dimensions} from '../image-info.js';\n*/\n\nconst crc = require('crc'),\n\t  InfoProvider = require('../image-info'),\n\t  pf = require('../pixel-format');\n\nconst PixelFormat = pf.PixelFormat;\nconst ColorSpace = pf.ColorSpace;\n\nconst IHDR_OFFSET = 0xC;\nconst SECTION_HEADER_WIDTH = 4;\nconst SECTION_LENGTH_WIDTH = 4;\nconst CRC_WIDTH = 4;\n\nconst WIDTH_OFFSET = IHDR_OFFSET + SECTION_HEADER_WIDTH;\nconst HEIGHT_OFFSET = WIDTH_OFFSET + 4;\nconst BIT_DEPTH_OFFSET = HEIGHT_OFFSET + 4;\nconst COLOR_TYPE_OFFSET = BIT_DEPTH_OFFSET + 1;\n\nconst CHUNK_TYPE_IEND = 0x49454E44;\n\n// const IEND_CRC = 0xAE426082;\nconst IEND_LENGTH = SECTION_LENGTH_WIDTH + SECTION_HEADER_WIDTH + CRC_WIDTH;\n\nconst GRAYSCALE_TYPES = new Set([0, 4]);\nconst RGB_TYPES = new Set([2, 3, 6]);\nconst ALPHA_TYPES = new Set([4, 6]);\nconst INDEXED_TYPES = new Set([4]);\n\n// http://www.libpng.org/pub/png/spec/1.2/\n\n/**\n * A PNG chunk.\n */\nclass PNGChunk {\n\t/*::\n\tlength: number;\n\theader: number;\n\tdata: Buffer;\n\tcrc32: number;\n\t*/\n\n\t/**\n\t * Construct a new PNG chunk.\n\t * @param  {Buffer} buffer The file buffer.\n\t * @param  {number} offset The offset of the beginning of the chunk.\n\t */\n\tconstructor(buffer/*: Buffer */, offset/*: number */) {\n\t\tthis.length = buffer.readUInt32BE(offset);\n\t\tthis.header = buffer.readUInt32BE(offset + SECTION_LENGTH_WIDTH);\n\t\tthis.data = buffer.slice(offset + SECTION_LENGTH_WIDTH + SECTION_HEADER_WIDTH, this.length);\n\t\tthis.crc32 = buffer.readUInt32BE(offset + SECTION_LENGTH_WIDTH + SECTION_HEADER_WIDTH + this.length);\n\t}\n\n\t/**\n\t * Verify the CRC in the chunk.\n\t *\n\t * @return {boolean} True if its a valid chunk.\n\t */\n\tverify()/*: boolean */ {\n\t\tconst header = Buffer.alloc(4);\n\t\tlet check = null;\n\n\t\theader.writeUInt32BE(this.header, 0);\n\n\t\tcheck = crc.crc32(header);\n\t\tcheck = crc.crc32(this.data, check);\n\n\t\treturn check === this.crc32;\n\t}\n}\n\n/**\n * A PNG info provider.\n */\nclass PNGInfoProvider extends InfoProvider {\n\t/**\n\t * @inheritdoc\n\t */\n\tget_overhead()/*: number */ {\n\t\t// This is the size of the smallest possible PNG, I'm assuming it will\n\t\t// be mostly overhead.\n\t\treturn 67;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tis_truncated(buffer/*: Buffer */)/*: boolean */ {\n\t\tlet end_chunk = null;\n\n\t\ttry {\n\t\t\tend_chunk = new PNGChunk(buffer, buffer.length - IEND_LENGTH);\n\t\t} catch (e) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn end_chunk.header === CHUNK_TYPE_IEND && !end_chunk.verify();\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget_dimensions(buffer/*: Buffer */)/*: Dimensions */ {\n\t\treturn {\n\t\t\twidth: buffer.readUInt32BE(WIDTH_OFFSET),\n\t\t\theight: buffer.readUInt32BE(HEIGHT_OFFSET),\n\t\t\tframes: 1,\n\t\t};\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tget_pixel_format(buffer/*: Buffer */)/*: PixelFormat */ {\n\t\tconst format = new PixelFormat();\n\t\tconst bit_depth = buffer.readInt8(BIT_DEPTH_OFFSET);\n\t\tconst color_type = buffer.readInt8(COLOR_TYPE_OFFSET);\n\n\t\t// Determine the color space\n\t\tif (RGB_TYPES.has(color_type)) {\n\t\t\tformat.color_space = ColorSpace.RGB;\n\t\t\tformat.bit_depth.R = bit_depth;\n\t\t\tformat.bit_depth.G = bit_depth;\n\t\t\tformat.bit_depth.B = bit_depth;\n\t\t} else if (GRAYSCALE_TYPES.has(color_type)) {\n\t\t\tformat.color_space = ColorSpace.G;\n\t\t\tformat.bit_depth.G = bit_depth;\n\t\t} else {\n\t\t\tformat.color_space = ColorSpace.unkownFormat(color_type);\n\t\t}\n\n\t\t// Determine the alpha channel\n\t\tif (ALPHA_TYPES.has(color_type)) {\n\t\t\tformat.alpha = true;\n\t\t\tformat.bit_depth.alpha = bit_depth;\n\t\t}\n\n\t\t// Determine if it is indexed.\n\t\tif (INDEXED_TYPES.has(color_type)) {\n\t\t\tformat.indexed = true;\n\t\t}\n\n\t\treturn format;\n\t}\n}\n\nmodule.exports = PNGInfoProvider;\n","/* @flow */\n\nconst WorkHandler = require('./work-handler');\nconst Hasher = require('./hasher');\nconst pf = require('./pixel-format');\nconst ColorSpace = pf.ColorSpace;\nconst LoggerFactory = require('./logger').LoggerFactory;\nconst EventEmitter = require('events');\nconst ImageIdentifier = require('./ident.js');\n\n/*::\nimport type { Dimensions, ImageInfo } from './image-info';\nimport type Finder from './finder';\nimport type {FileDescriptor} from './finder';\nimport type {Log} from './logger';\n\nexport type LinterOptions = {\n\tcolor_space: string[],\n\tduplicate: boolean,\n\tbytes_per_pixel: number,\n\tbyte_savings: number,\n\tmismatch: boolean,\n\thelp: boolean,\n\tversion: boolean\n};\n */\n\nrequire('./ident/png-ident.js');\nrequire('./ident/gif-ident.js');\nrequire('./ident/jpg-ident.js');\nrequire('./ident/jxl-ident.js');\nrequire('./ident/avif-ident.js');\n\n// Identify only\nrequire('./ident/bmp-ident.js');\nrequire('./ident/psd-ident.js');\nrequire('./ident/ico-ident.js');\nrequire('./ident/tiff-ident.js');\nrequire('./ident/webp-ident.js');\nrequire('./ident/svg-ident.js');\nrequire('./ident/html-ident.js');\n\n/**\n * The image linter.\n */\nclass Linter extends EventEmitter {\n\t/*::\n\tfinder: Finder;\n\tdisable_color: boolean;\n\t */\n\n\t/**\n\t * Construct a new Linter\n\t * @param  {Finder} finder The finder to use to locate the images.\n\t */\n\tconstructor(finder/*: Finder */) {\n\t\tsuper();\n\n\t\tthis.finder = finder;\n\t\tthis.disable_color = false;\n\t}\n\n\t/**\n\t * Calculate the optimal size of the image.\n\t *\n\t * @param  {Dimensions} dims   The dimensions of the image.\n\t * @param  {number}     bpp    The bytes per pixel of the image.\n\t * @return {number}            The optimial size of the image.\n\t */\n\tcalculate_optimial_size(dims/*: Dimensions */, bpp/*: number */)/*: number */ {\n\t\treturn ((dims.width * dims.height * dims.frames) * bpp);\n\t}\n\n\t/**\n\t * Construct a description of an image file.\n\t *\n\t * @param  {Dimensions} dims    The dimensions of the image.\n\t * @return {string}             The description of the image.\n\t */\n\tdescribe_file(dims/*: Dimensions */)/*: string */ {\n\t\treturn 'File properties: ' + dims.width + 'x' + dims.height + (dims.frames !== 1 ? ', ' + dims.frames + ' frames' : '');\n\t}\n\n\t/**\n\t * Get the information for the file.\n\t *\n\t * @param  {FileDescriptor} file    The file descriptor.\n\t * @param  {Buffer} buffer          The file buffer.\n\t * @param  {Log} logger             The logger for printing errors.\n\t * @param  {LinterOptions} options  The options for the linter.\n\t * @return {Promise<ImageInfo>}     The image info.\n\t */\n\tget_info(file/*: FileDescriptor */, buffer/*: Buffer */, logger/*: Log */, options/*: LinterOptions */)/*: Promise<ImageInfo> */ {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst extension = file.extension.toLowerCase();\n\t\t\tlet identifier = ImageIdentifier.from_extension(extension);\n\t\t\tlet file_buffer/*: ?Buffer */ = null;\n\t\t\tlet is_of_file_type = false;\n\n\t\t\tif (buffer instanceof Buffer) {\n\t\t\t\tfile_buffer = buffer;\n\t\t\t} else {\n\t\t\t\treject('Image buffer is missing, this is a bug.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (identifier) {\n\t\t\t\tis_of_file_type = identifier.is_of_file_type(file_buffer);\n\t\t\t} else {\n\t\t\t\tlogger.warn('There is no information provider for \"' + extension + '\" files.');\n\t\t\t}\n\n\t\t\t// Attenpt to find the correct file type.\n\t\t\tif (!identifier || !is_of_file_type) {\n\t\t\t\tif (options.mismatch === true) {\n\t\t\t\t\tlogger.info('This file is not what it seems, attempting brute force discovery of file type.');\n\t\t\t\t} else {\n\t\t\t\t\tlogger.info('This file is not what it seems.');\n\t\t\t\t}\n\n\t\t\t\tidentifier = null;\n\n\t\t\t\tfor (const candidate of ImageIdentifier.all_providers()) {\n\t\t\t\t\tif (candidate.can_validate(file_buffer) && candidate.is_of_file_type(file_buffer)) {\n\t\t\t\t\t\tidentifier = candidate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!is_of_file_type) {\n\t\t\t\tlet found_extension = 'unknown';\n\n\t\t\t\tif (identifier) {\n\t\t\t\t\tfound_extension = identifier.get_extension();\n\t\t\t\t}\n\n\t\t\t\tif (options.mismatch === true) {\n\t\t\t\t\tlogger.warn('There is a mismatch between the file extension (' + extension + ') and the file contents (' + found_extension + ')');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (identifier) {\n\t\t\t\tconst ProviderClass = identifier.get_info_provider();\n\n\t\t\t\tif (!ProviderClass) {\n\t\t\t\t\treject('Unsupported file type');\n\t\t\t\t} else {\n\t\t\t\t\tconst provider = new ProviderClass();\n\n\t\t\t\t\tresolve(provider.get_info(file_buffer));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treject('Unknown file type');\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Run the linter\n\t * @param  {string[]} folder        A list of folders to look for images in.\n\t * @param  {LinterOptions} options  The options for the linter.\n\t * @return {Linter}                 The linter for chaining.\n\t */\n\tlint(folder/*: string[] */, options/*: LinterOptions */)/*: Linter */ {\n\t\tconst linter = this;\n\t\tconst handler = new WorkHandler();\n\t\tconst hasher = new Hasher();\n\t\tlet allowed_color_spaces/*: Set<ColorSpace> | null */ = null;\n\n\t\t// Prepare the allowed color spaces.\n\t\tif (options.color_space) {\n\t\t\tconst spaces = options.color_space;\n\n\t\t\tallowed_color_spaces = new Set();\n\n\t\t\tfor (let space of spaces) {\n\t\t\t\tspace = ColorSpace.from(space);\n\n\t\t\t\tif (space) {\n\t\t\t\t\tallowed_color_spaces.add(space);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\thandler.on('next', (file/*: FileDescriptor */, done/*: () => void */) => {\n\t\t\tconst logger = LoggerFactory.get_log(file.path);\n\n\t\t\t/**\n\t\t\t * Handler an error from the loader\n\t\t\t * @param  {Error} err An error.\n\t\t\t */\n\t\t\tfunction error_handler(err/*: Error */) {\n\t\t\t\tif (err.stack) {\n\t\t\t\t\tlogger.error(err.message + ': ' + err.stack);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.error(err);\n\t\t\t\t}\n\n\t\t\t\tlinter.emit('file.completed', logger);\n\n\t\t\t\tdone();\n\t\t\t}\n\n\t\t\t// console.log(file.path);\n\n\t\t\tfile.loader.load()\n\t\t\t\t.then((buffer) => {\n\t\t\t\t\t// Check for empty files and exit early to prevent unnecessary work.\n\t\t\t\t\tif (buffer.length === 0) {\n\t\t\t\t\t\tthrow 'This is an empty file, further analysis is not possible.';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (options.duplicate === true) {\n\t\t\t\t\t\tconst found = hasher.contains(file.path, buffer);\n\n\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\tlogger.warn('This file is a duplicate of: ' + found);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.get_info(file, buffer, logger, options);\n\t\t\t\t})\n\t\t\t\t.then((info/*: ImageInfo */) => {\n\t\t\t\t\tif (!info.truncated) {\n\t\t\t\t\t\tconst color_space = info.pixel_format.color_space;\n\t\t\t\t\t\tconst min_bpp = options.bytes_per_pixel;\n\t\t\t\t\t\tconst min_savings = options.byte_savings;\n\t\t\t\t\t\tconst size_difference = info.size - this.calculate_optimial_size(info.dimensions, min_bpp);\n\n\t\t\t\t\t\tlogger.info(this.describe_file(info.dimensions));\n\n\t\t\t\t\t\tif (info.bytes_per_pixel >= min_bpp && (size_difference > min_savings)) {\n\t\t\t\t\t\t\tlogger.warn('The bytes per pixel (' + info.bytes_per_pixel.toFixed(2) + ') exceeds the minimum (' + min_bpp + ').');\n\t\t\t\t\t\t\tlogger.info('You can acheive a minimum savings of ' + size_difference + ' bytes by meeting this threshold.');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (allowed_color_spaces) {\n\t\t\t\t\t\t\tif (color_space.name === 'UNK') {\n\t\t\t\t\t\t\t\tconst channels = color_space.channels > 0 ? color_space.channels : 'an unknown number of';\n\n\t\t\t\t\t\t\t\tlogger.error(`This image has an unknown color space ${ color_space.getUnkFormat() } with ${ channels } channels.`);\n\t\t\t\t\t\t\t} else if (allowed_color_spaces.size && !allowed_color_spaces.has(color_space)) {\n\t\t\t\t\t\t\t\t// console.log('Color Space', color_space);\n\t\t\t\t\t\t\t\tlogger.warn(`The color space of this image is ${ color_space.name }. It must be one of ${ options.color_space }.`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.error('This image is truncated, further analysis is not possible.');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.emit('file.completed', logger);\n\n\t\t\t\t\tdone();\n\t\t\t\t}, error_handler)\n\t\t\t\t.catch(error_handler);\n\t\t});\n\n\t\thandler.on('end', () => {\n\t\t\tthis.emit('linter.completed');\n\t\t});\n\n\t\thandler.start(this.finder.get_files(folder));\n\n\t\treturn this;\n\t}\n}\n\nmodule.exports.default = Linter;\n","/* @flow */\n\n/**\n * A base class for loader instances.\n */\nclass Loader {\n\t/*::\n\t_path: string;\n\t*/\n\n\t/**\n\t * Construct a new loader instance.\n\t *\n\t * @param  {string} path The path to use for loading files.\n\t */\n\tconstructor(path/*: string */) {\n\t\tthis._path = path;\n\t}\n\n\t/**\n\t * The path.\n\t * @return {string} The path.\n\t */\n\tgetPath()/*: string */ {\n\t\treturn this._path;\n\t}\n\n\t/**\n\t * Load the file at the provided path.\n\t *\n\t * @return {Promise<Buffer>}  An image file.\n\t */\n\tload()/*: Promise<Buffer> */ {\n\t\treturn Promise.reject('Not Implemented!');\n\t}\n}\n\nmodule.exports = Loader;\n","/* @flow */\nconst Loader = require('../loader');\n\n/**\n * Load files from a web browser Blob object.\n */\nclass BlobLoader extends Loader {\n\t/*::\n\t_blob: Blob\n\t*/\n\n\t/**\n\t * Construct a new BlobLoader.\n\t *\n\t * @param  {Blob} blob  A web browser Blob object\n\t */\n\tconstructor(blob/*: Blob */) {\n\t\tsuper('');\n\n\t\tthis._blob = blob;\n\t}\n\n\t/**\n\t * Load the file.\n\t * @return {Promise<Buffer>}  The loaded file.\n\t */\n\tasync load()/*: Promise<Buffer> */ {\n\t\tconst arrbuf = await this._blob.arrayBuffer();\n\n\t\treturn Buffer.from(arrbuf);\n\t}\n}\n\nmodule.exports = BlobLoader;\n","/* @flow */\n'use strict';\n\nconst chalk = require('chalk');\n\n/*::\ninterface LogCounts {\n\tinfo: number;\n\twarn: number;\n\terror: number;\n}\n*/\n\n/**\n * A logger for writing the output to a string.\n */\nclass Log {\n\t/*::\n\tfilename: string;\n\tlog: string;\n\tcount: LogCounts;\n\t*/\n\n\t/**\n\t * Construct a new logger, generally you should use the logger factory\n\t * instead of directly constructing this object.\n\t *\n\t * @param  {string} filename The name of the file that is being linted.\n\t */\n\tconstructor(filename/*: string */) {\n\t\tthis.filename = filename;\n\t\tthis.log = '';\n\t\tthis.count = {\n\t\t\t'info': 0,\n\t\t\t'warn': 0,\n\t\t\t'error': 0,\n\t\t};\n\t}\n\n\t/**\n\t * Determine if this should be printed.\n\t * @return {boolean} true if the log should be printed.\n\t */\n\tis_printable()/*: boolean */ {\n\t\treturn this.count.warn > 0 || this.count.error > 0;\n\t}\n\n\t/**\n\t * Log a message at the 'info' level.\n\t *\n\t * @param  {string} message The message to be logged.\n\t */\n\tinfo(message/*: string */) {\n\t\tthis.count.info++;\n\t\tthis.log += '\\n  INFO:  ' + message;\n\t}\n\n\t/**\n\t * Log a message at the 'warn' level.\n\t *\n\t * @param  {string} message The message to be logged.\n\t */\n\twarn(message/*: string */) {\n\t\tthis.count.warn++;\n\t\tthis.log += '\\n  ' + chalk.yellow('WARN:') + '  ' + message;\n\t}\n\n\t/**\n\t * Log a message at the 'error' level.\n\t *\n\t * @param  {string} message The message to be logged.\n\t */\n\terror(message/*: string */) {\n\t\tthis.count.error++;\n\t\tthis.log += '\\n  ' + chalk.red('ERROR:') + '  ' + message;\n\t}\n\n\t/**\n\t * Get the number of errors that have been logged.\n\t * @return {number} The number of errors.\n\t */\n\tget_error_count() {\n\t\treturn this.count.error;\n\t}\n\n\t/**\n\t * Get the number of warnings that have been logged.\n\t * @return {number} The number of warnings.\n\t */\n\tget_warning_count() {\n\t\treturn this.count.warn;\n\t}\n\n\t/**\n\t * Convert this log to a string.\n\t * @return {string} The log output.\n\t */\n\ttoString()/*: string */ {\n\t\tlet warn_count = this.count.warn.toString();\n\t\tlet error_count = this.count.error.toString();\n\n\t\tif (this.count.warn) {\n\t\t\twarn_count = chalk.yellow(warn_count);\n\t\t}\n\n\t\tif (this.count.error) {\n\t\t\terror_count = chalk.red(error_count);\n\t\t}\n\n\t\treturn this.filename + this.log + '\\n' +\n\t\t\twarn_count + ' warnings. ' +\n\t\t\terror_count + ' errors.';\n\t}\n}\n\n/**\n * A factory for creating new logs.\n */\nclass LoggerFactory {\n\t/**\n\t * Get a new instance of a logger.\n\t *\n\t * @param {string} filename The filename of the file being linted.\n\t * @return {Log}            The new logging instance.\n\t */\n\tstatic get_log(filename/*: string */)/*: Log */ {\n\t\treturn new Log(filename);\n\t}\n}\n\nexports.LoggerFactory = LoggerFactory;\nexports.Log = Log;\n","/* @flow */\n'use strict';\n\n/**\n * An enumeration of all of the color spaces\n */\nclass ColorSpace {\n\t/*::\n\tstatic G: ColorSpace;\n\tstatic RGB: ColorSpace;\n\tstatic YCbCr: ColorSpace;\n\tstatic YCCK: ColorSpace;\n\tstatic LAB: ColorSpace;\n\tstatic HSV: ColorSpace;\n\tstatic CMYK: ColorSpace;\n\tstatic XYZ: ColorSpace;\n\tstatic XYB: ColorSpace;\n\n\tstatic all_names: Set<string>;\n\n\tname: string;\n\tchannels: number;\n\tunk_format: string | null;\n\t*/\n\n\t/**\n\t * Construct a new ColorSpace.\n\t * @param  {string} name     The name of the color space.\n\t * @param  {number} channels The number of channels for this color space.\n\t */\n\tconstructor(name/*: string */, channels/*: number */) {\n\t\tthis.name = name;\n\t\tthis.channels = channels;\n\t\tthis.unk_format = null;\n\n\t\tColorSpace.all_names.add(name);\n\t}\n\n\t/**\n\t * If this is 'ColorSpace.UNK' return the name of the color format that\n\t * was unknown.\n\t *\n\t * @return {String} The unknown format.\n\t */\n\tgetUnkFormat() {\n\t\treturn this.unk_format;\n\t}\n\n\t/**\n\t * Get an existing color space with the given name.\n\t * @param  {string} id   The name of the color space.\n\t * @return {ColorSpace}  The color space or null if no color space exists\n\t *                       with that name.\n\t */\n\tstatic from(id/*: string*/)/*: ColorSpace | null */ {\n\t\tlet space/*: ColorSpace | null */ = null;\n\n\t\tif (this.all_names.has(id)) {\n\t\t\tspace = (ColorSpace/*: any */)[id];\n\t\t}\n\n\t\treturn space;\n\t}\n\n\t/**\n\t * Construct a marker for an unknown color space.\n\t *\n\t * @param  {string} format      The name of the color space that was unknown.\n\t * @param  {number} [channels]  The number of channels.\n\t * @return {ColorSpace}         The unknown color space.\n\t */\n\tstatic unkownFormat(format, channels=-1) {\n\t\tconst color_space = new ColorSpace('UNK', channels);\n\n\t\tcolor_space.unk_format = format;\n\n\t\treturn color_space;\n\t}\n}\n\nColorSpace.all_names = new Set();\n\nColorSpace.G = new ColorSpace('G', 1);\nColorSpace.RGB = new ColorSpace('RGB', 3);\nColorSpace.YCbCr = new ColorSpace('YCbCr', 3);\nColorSpace.YCCK = new ColorSpace('YCCK', 4);\nColorSpace.LAB = new ColorSpace('LAB', 3);\nColorSpace.HSV = new ColorSpace('HSV', 3);\nColorSpace.CMYK = new ColorSpace('CMYK', 4);\nColorSpace.XYZ = new ColorSpace('XYZ', 3);\nColorSpace.XYB = new ColorSpace('XYB', 3);\n\n/**\n * The pixel format of an image.\n */\nclass PixelFormat {\n\t/*::\n\tcolor_space: ColorSpace;\n\tindexed: boolean;\n\talpha: boolean;\n\tbit_depth: { [channel: string]: number};\n\t*/\n\n\t/**\n\t * Construct a new PixelFormat\n\t */\n\tconstructor() {\n\t\tthis.indexed = false;\n\t\tthis.alpha = false;\n\t\tthis.bit_depth = {};\n\t}\n}\n\nmodule.exports = {\n\t'ColorSpace': ColorSpace,\n\t'PixelFormat': PixelFormat,\n};\n","/* @flow */\n'use strict';\n\nconst EventEmitter = require('events');\n\n// const MAX_ACTIVE_HANDLERS = 1;\nconst MAX_ACTIVE_HANDLERS = 10;\n\n/**\n * Manage workloads so the async queue doesn't get filled before any work can\n * be done. An iterable is provided to the the start method each item will be\n * emitted for processing with the 'next' event.\n *\n * The 'next' event handler will be provided two parameter, the next item in the\n * iterable and a 'done' function to be called to release the work handler back\n * to the pool.\n */\nclass WorkHandler /*:: <T> */ extends EventEmitter {\n\t/*::\n\t_active_handlers: number;\n\t_active_processes: number;\n\t_done_proxy: () => void;\n\t_iterator: Iterator<T> | null;\n\t*/\n\n\t/**\n\t * Construct a new WorkHandler\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._active_handlers = 0;\n\t\tthis._active_processes = 0;\n\t\tthis._done_proxy = this._done.bind(this);\n\t\tthis._iterator = null;\n\n\t\tthis.on('handler.available', this._handler_available.bind(this));\n\t}\n\n\t/**\n\t * Kick off the next element in the iterable.\n\t */\n\t_handler_available() {\n\t\tif (this._iterator) {\n\t\t\tconst next = this._iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\tthis._iterator = null;\n\t\t\t} else {\n\t\t\t\tthis.emit('next', next.value, this._done_proxy);\n\t\t\t\tthis._active_handlers++;\n\t\t\t\tthis._active_processes++;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Release the work handler to the pool.\n\t */\n\t_done() {\n\t\tthis._active_handlers--;\n\t\tthis._active_processes--;\n\n\t\t// console.log('handlers', this._active_handlers);\n\t\t// console.log('processes', this._active_processes);\n\n\t\tif (this._active_handlers >= 0) {\n\t\t\tthis.emit('handler.available');\n\t\t} else {\n\t\t\tthrow new Error('No handlers available, did you call done?');\n\t\t}\n\n\t\tif (this._active_processes <= 0) {\n\t\t\tthis.emit('end');\n\t\t}\n\t}\n\n\t/**\n\t * Start the work handler.\n\t * @param  {Promise<Iterable<T>>} promise An iterable of items that will\n\t *                                        be processed.\n\t */\n\tstart(promise/*: Promise<Iterable<T>> */) {\n\t\tif (this._iterator) {\n\t\t\tthrow new Error('Work is in progress');\n\t\t}\n\n\t\tthis._active_handlers = 0;\n\n\t\tpromise\n\t\t\t.then((iterator) => {\n\t\t\t\tthis._iterator = iterator();\n\n\t\t\t\twhile (this._active_handlers < MAX_ACTIVE_HANDLERS) {\n\t\t\t\t\tthis.emit('handler.available');\n\t\t\t\t\tthis._active_handlers++;\n\t\t\t\t}\n\t\t\t}, (e/*: Error */) => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tconsole.error(`${ e.name }: ${ e.message } \\n`, e);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('Error', e);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e/*: Error */) => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tconsole.error(`${ e.name }: ${ e.message } \\n`, e);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('Error', e);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = WorkHandler;\n"],"names":["Array","dt","items","i","getAsFile","files","e","preventDefault","this","$refs","dropzone","classList","remove","from","dataTransfer","$emit","add","class","ref","drop","dragover","dragenter","dragleave","components","GithubButton","data","options","Object","assign","color_space","split","length","name","version","description","href","type","option","mismatch","duplicate","step","min","bytes_per_pixel","byte_savings","multiple","available","clear","open","finder","linter","error","results","async","files_old","Promise","resolve","reject","result_list","lint","on","logger","push","immediate","has_finished","has_error","has_results","reformat_log","log","trim","map","line","join","result","count","warn","filename","info","body","document","rootEl","createElement","appendChild","component","mount","defaults","argshelper","ImageIdentifier","BufferArrayFinder","exports","default","module","static","config","args","help","aliases","default_value","alias","isArray","concat","toString","console","load_package_info","hasOwnProperty","print_option","constructor","extensions","mimes","get_files","initial_items","Error","is_image_extension","ext","indexOf","is_image_mime","mime","Finder","BlobLoader","path","initial_files","_search","bind","file","extension","extname","crypto","trie","Map","find","digest","current","depth","previous","byte","get","set","contains","buffer","hash","createHash","update","hashes","found_name","_info_provider","identify_only","get_info_provider","is_of_file_type","get_extension","get_extensions","get_mime","get_mimes","can_validate","Constructor","provider","is_identify_only","_extension_registry","_all_extensions","_mime_registry","_all_mimes","_all_providers","AVIFInfoProvider","register","ftyp","subarray","FTYP_START","MagicNumberIdentifier","get_magic","Buffer","GIFInfoProvider","XMLIdentifier","get_root_element","first_magic","readUInt16LE","type_magic","JPGInfoProvider","JXLInfoProvider","magic","buffer_magic","slice","compare","PNGInfoProvider","get_type_tag","riff_magic","readUInt32BE","RIFFIdentifier","toLowerCase","includes","calculate_bpp","dims","size","get_overhead","width","height","frames","get_dimensions","get_pixel_format","get_info","is_truncated","truncated","dimensions","pixel_format","InfoProvider","pf","RootBlock","PixelFormat","ColorSpace","ispeAtom","children","meta","iprp","ipco","ispe","root","format","RGB","pixi","channels","G","unkownFormat","next_chunk","offset","block_length","readUInt8","get_sub_block_length","sub_block_length","size_byte","get_color_table_length","color_table_bits","Math","pow","has_color_table","get_version","frame_count","found","SETTINGS_OFFSET","block_header","indexed","bit_depth","R","B","alpha","ISOBMFFAtom","tag","block","content","BLOCK_TYPES","UnknownAtom","NullAtom","ISOBMFFBlock","super","_buffer","_offset","_children","readBlocks","bytesProcessed","blocksTillMax","read","majorBrand","readBrand","minorVersion","compatibleBrands","numberOfCompatBrands","unknown","bitsPerChannel","UNKNOWN_BITS","readUInt16BE","is_sof_chunk","sof_byte","chunks","CMYK","BitStream","SizeHeader","ImageMetadata","COLOR_SPACE","bit_stream","size_header","get_xsize","get_ysize","color_encoding","K_GREY","K_RGB","K_XYZ","XYZ","K_XYB","XYB","U32_MAX","IllformedStreamError","sub_bit","current_byte","read_from_byte","bits","value","mask","read_bits","WORD_SIZE","leftovers","shift","start_bits","bytes","floor","read_boolean","read_u32","distributions","dist","read_s32","v","read_f16","bits16","sign","biased_exp","mantissa","biased_exp32","mantissa32","ArrayBuffer","Uint32Array","Float32Array","read_customxy","x","y","read_enum","enum_table","has","get_bits_read","U32","VAL","BITS","BITS_OFFSET","K_UNKNOWN","ENUM_COLOR_SPACE","Set","ENUM_WHITE_POINT","ENUM_PRIMARIES","ENUM_TRANSFER_FUNCTION","ENUM_RENDERING_INTENT","ColorEncoding","stream","received_icc","opaque_icc","white_point","primaries","have_gamma","gamma","transfer_function","rendering_intent","all_default","white","red","green","blue","have_icc","bits_per_sample","alpha_bits","target_nits","m2","ysize","xsize","small","ratio","get_small","get_ratio","Ratio","XSIZE_SEPARATE","XSIZE_IS_YSIZE","XSIZE_RATIO_12X10","XSIZE_RATIO_4X3","XSIZE_RATIO_3X2","XSIZE_RATIO_16X9","XSIZE_RATIO_5X4","XSIZE_RATIO_2X1","crc","GRAYSCALE_TYPES","RGB_TYPES","ALPHA_TYPES","INDEXED_TYPES","PNGChunk","header","crc32","verify","alloc","check","writeUInt32BE","end_chunk","SECTION_LENGTH_WIDTH","IHDR_OFFSET","WIDTH_OFFSET","readInt8","HEIGHT_OFFSET","color_type","BIT_DEPTH_OFFSET","WorkHandler","Hasher","LoggerFactory","EventEmitter","disable_color","calculate_optimial_size","bpp","describe_file","identifier","from_extension","file_buffer","candidate","all_providers","found_extension","ProviderClass","folder","handler","hasher","allowed_color_spaces","spaces","space","done","get_log","error_handler","err","stack","message","emit","loader","load","then","min_bpp","min_savings","size_difference","toFixed","getUnkFormat","catch","start","_path","getPath","Loader","blob","_blob","arrbuf","arrayBuffer","chalk","Log","is_printable","yellow","get_error_count","get_warning_count","warn_count","error_count","unk_format","all_names","id","YCbCr","YCCK","LAB","HSV","_active_handlers","_active_processes","_done_proxy","_done","_iterator","_handler_available","next","promise","iterator"],"sourceRoot":""}